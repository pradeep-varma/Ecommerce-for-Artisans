{"version":3,"sources":["constants/productConstants.js","constants/helperConstants.js","constants/foodConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/helperReducers.js","reducers/foodReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Meta.js","screens/HomeScreens.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/ProductCarousel.js","screens/ProductsScreens.js","screens/ProductScreens.js","screens/SellerScreens.js","components/Helper.js","actions/helperActions.js","screens/HelpersScreens.js","screens/HelperScreens.js","components/Food.js","actions/foodActions.js","screens/FoodsScreens.js","screens/FoodScreens.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreens.js","screens/RegisterScreens.js","screens/ProfileScreens.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreens.js","screens/PaymentScreens.js","screens/PlaceOrderScreens.js","screens/OrderScreens.js","screens/UserListScreens.js","screens/UserEditScreens.js","screens/ProductListScreens.js","screens/ProductEditScreens.js","screens/HelperListScreens.js","screens/HelperEditScreens.js","screens/FoodListScreens.js","screens/FoodEditScreens.js","screens/OrderListScreens.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","HELPER_LIST_REQUEST","HELPER_LIST_SUCCESS","HELPER_LIST_FAIL","HELPER_DETAILS_REQUEST","HELPER_DETAILS_SUCCESS","HELPER_DETAILS_FAIL","HELPER_DELETE_REQUEST","HELPER_DELETE_SUCCESS","HELPER_DELETE_FAIL","HELPER_CREATE_REQUEST","HELPER_CREATE_SUCCESS","HELPER_CREATE_FAIL","HELPER_CREATE_RESET","HELPER_UPDATE_REQUEST","HELPER_UPDATE_SUCCESS","HELPER_UPDATE_FAIL","HELPER_UPDATE_RESET","HELPER_CREATE_REVIEW_REQUEST","HELPER_CREATE_REVIEW_SUCCESS","HELPER_CREATE_REVIEW_FAIL","HELPER_CREATE_REVIEW_RESET","FOOD_LIST_REQUEST","FOOD_LIST_SUCCESS","FOOD_LIST_FAIL","FOOD_DETAILS_REQUEST","FOOD_DETAILS_SUCCESS","FOOD_DETAILS_FAIL","FOOD_DELETE_REQUEST","FOOD_DELETE_SUCCESS","FOOD_DELETE_FAIL","FOOD_CREATE_REQUEST","FOOD_CREATE_SUCCESS","FOOD_CREATE_FAIL","FOOD_CREATE_RESET","FOOD_UPDATE_REQUEST","FOOD_UPDATE_SUCCESS","FOOD_UPDATE_FAIL","FOOD_UPDATE_RESET","FOOD_CREATE_REVIEW_REQUEST","FOOD_CREATE_REVIEW_SUCCESS","FOOD_CREATE_REVIEW_FAIL","FOOD_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productTopRated","productReviewCreate","helperList","helpers","helperDetails","helper","helperDelete","helperCreate","helperUpdate","helperReviewCreate","foodList","foods","foodDetails","food","foodDelete","foodCreate","foodUpdate","foodReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Row","Col","Control","name","onChange","target","value","placeholder","className","style","width","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","NavDropdown","title","Item","Divider","Link","onClick","removeItem","href","isAdmin","current_year","Date","getFullYear","Footer","Meta","description","keywords","Helmet","content","defaultProps","HomeScreens","textAlign","sm","Image","src","fluid","fontSize","lg","md","padding","color","backgroundColor","Carousel","as","roundedCircle","alt","height","Rating","text","Product","Card","_id","Img","image","Body","Title","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","margin","display","listProducts","listProductDetails","ProductCarousel","useEffect","pause","Caption","position","top","ProductsScreens","match","params","xl","ProductScreens","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","Array","keys","disabled","sellerImage","sellerName","sellerContact","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","SellerScreens","varaint","sellerDescription","sellerAddress","Helper","occupation_type","contact","listHelpers","listHelperDetails","HelpersScreens","HelperScreens","successHelperReview","errorHelperReview","place","helperId","Food","owner","location","listFoods","listFoodDetails","FoodsScreens","FoodScreens","successFoodReview","errorFoodReview","foodId","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreens","email","setEmail","password","setPassword","redirect","login","RegisterScreens","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreens","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreens","address","setAddress","city","setCity","pincode","setPinCode","country","setCountry","required","PaymentScreens","setPaymentMethod","Check","label","checked","PlaceOrderScreens","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrdersScreens","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreens","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreens","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreens","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreens","setPrice","setDescription","setBrand","setCategory","setImage","setCountInStock","setSellerName","setSellerImage","setSellerDescription","setSellerAddress","setSellerContact","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","uploadfileHandler","updateProduct","File","custom","HelperListScreens","createdHelper","deleteHelper","HelperEditScreens","setOccupation_Type","setPlace","setContact","updateHelper","FoodListScreens","createdFood","deleteFood","FoodEditScreens","setOwner","setLocation","updateFood","OrderListScreens","App","path","component","exact","OrderScreens","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.db891b47.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST='PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS='PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL='PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST='PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS='PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL='PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST='PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS='PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL='PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST='PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS='PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL='PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET='PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST='PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS='PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL='PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET='PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST='PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS='PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL='PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET='PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST='PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS='PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL='PRODUCT_TOP_FAIL'\n","export const HELPER_LIST_REQUEST='PRODUCT_LIST_REQUEST'\nexport const HELPER_LIST_SUCCESS='PRODUCT_LIST_SUCCESS'\nexport const HELPER_LIST_FAIL='PRODUCT_LIST_FAIL'\n\nexport const HELPER_DETAILS_REQUEST='HELPER_DETAILS_REQUEST'\nexport const HELPER_DETAILS_SUCCESS='HELPER_DETAILS_SUCCESS'\nexport const HELPER_DETAILS_FAIL='HELPER_DETAILS_FAIL'\n\nexport const HELPER_DELETE_REQUEST='HELPER_DELETE_REQUEST'\nexport const HELPER_DELETE_SUCCESS='HELPER_DELETE_SUCCESS'\nexport const HELPER_DELETE_FAIL='HELPER_DELETE_FAIL'\n\nexport const HELPER_CREATE_REQUEST='HELPER_CREATE_REQUEST'\nexport const HELPER_CREATE_SUCCESS='HELPER_CREATE_SUCCESS'\nexport const HELPER_CREATE_FAIL='HELPER_CREATE_FAIL'\nexport const HELPER_CREATE_RESET='HELPER_CREATE_RESET'\n\nexport const HELPER_UPDATE_REQUEST='HELPER_UPDATE_REQUEST'\nexport const HELPER_UPDATE_SUCCESS='HELPER_UPDATE_SUCCESS'\nexport const HELPER_UPDATE_FAIL='HELPER_UPDATE_FAIL'\nexport const HELPER_UPDATE_RESET='HELPER_UPDATE_RESET'\n\nexport const HELPER_CREATE_REVIEW_REQUEST='HELPER_CREATE_REVIEW_REQUEST'\nexport const HELPER_CREATE_REVIEW_SUCCESS='HELPER_CREATE_REVIEW_SUCCESS'\nexport const HELPER_CREATE_REVIEW_FAIL='HELPER_CREATE_REVIEW_FAIL'\nexport const HELPER_CREATE_REVIEW_RESET='HELPER_CREATE_REVIEW_RESET'","export const FOOD_LIST_REQUEST='FOOD_LIST_REQUEST'\nexport const FOOD_LIST_SUCCESS='FOOD_LIST_SUCCESS'\nexport const FOOD_LIST_FAIL='FOOD_LIST_FAIL'\n\nexport const FOOD_DETAILS_REQUEST='FOOD_DETAILS_REQUEST'\nexport const FOOD_DETAILS_SUCCESS='FOOD_DETAILS_SUCCESS'\nexport const FOOD_DETAILS_FAIL='FOOD_DETAILS_FAIL'\n\nexport const FOOD_DELETE_REQUEST='FOOD_DELETE_REQUEST'\nexport const FOOD_DELETE_SUCCESS='FOOD_DELETE_SUCCESS'\nexport const FOOD_DELETE_FAIL='FOOD_DELETE_FAIL'\n\nexport const FOOD_CREATE_REQUEST='FOOD_CREATE_REQUEST'\nexport const FOOD_CREATE_SUCCESS='FOOD_CREATE_SUCCESS'\nexport const FOOD_CREATE_FAIL='FOOD_CREATE_FAIL'\nexport const FOOD_CREATE_RESET='FOOD_CREATE_RESET'\n\nexport const FOOD_UPDATE_REQUEST='FOOD_UPDATE_REQUEST'\nexport const FOOD_UPDATE_SUCCESS='FOOD_UPDATE_SUCCESS'\nexport const FOOD_UPDATE_FAIL='FOOD_UPDATE_FAIL'\nexport const FOOD_UPDATE_RESET='FOOD_UPDATE_RESET'\n\nexport const FOOD_CREATE_REVIEW_REQUEST='FOOD_CREATE_REVIEW_REQUEST'\nexport const FOOD_CREATE_REVIEW_SUCCESS='FOOD_CREATE_REVIEW_SUCCESS'\nexport const FOOD_CREATE_REVIEW_FAIL='FOOD_CREATE_REVIEW_FAIL'\nexport const FOOD_CREATE_REVIEW_RESET='FOOD_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM= 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM= 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS='CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD='CART_SAVE_PAYMENT_METHOD'\n\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\n\nexport const USER_LOGOUT= 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n","export const ORDER_CREATE_REQUEST= 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS= 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL= 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST= 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS= 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL= 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST= 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS= 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL= 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET= 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST= 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS= 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL= 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET= 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST= 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS= 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL= 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST= 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS= 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL= 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET= 'ORDER_DELIVER_RESET'","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productUpdateReducer,productReviewCreateReducer,productTopRatedReducer} from './reducers/productReducers'\nimport {helperListReducer,helperDetailsReducer,helperDeleteReducer,helperCreateReducer,helperUpdateReducer,helperReviewCreateReducer} from './reducers/helperReducers'\nimport {foodListReducer,foodDetailsReducer,foodDeleteReducer,foodCreateReducer,foodUpdateReducer,foodReviewCreateReducer} from './reducers/foodReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer} from './reducers/userReducers'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,orderListReducer,orderDeliverReducer} from './reducers/orderReducers'\n\nconst reducer= combineReducers({ \n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    productDelete:productDeleteReducer,\n    productCreate:productCreateReducer,\n    productUpdate:productUpdateReducer,\n    productTopRated:productTopRatedReducer,\n    productReviewCreate:productReviewCreateReducer,\n    helperList:helperListReducer,\n    helperDetails:helperDetailsReducer,\n    helperDelete:helperDeleteReducer,\n    helperCreate:helperCreateReducer,\n    helperUpdate:helperUpdateReducer,\n    helperReviewCreate:helperReviewCreateReducer,\n    foodList:foodListReducer,\n    foodDetails:foodDetailsReducer,\n    foodDelete:foodDeleteReducer,\n    foodCreate:foodCreateReducer,\n    foodUpdate:foodUpdateReducer,\n    foodReviewCreate:foodReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n    userList:userListReducer,\n    userDelete:userDeleteReducer,\n    userUpdate:userUpdateReducer,\n    orderCreate:orderCreateReducer,\n    orderDetails:orderDetailsReducer,\n    orderPay:orderPayReducer,\n    orderDeliver:orderDeliverReducer,\n    orderListMy:orderListMyReducer,\n    orderList:orderListReducer,\n\n})\n\nconst cartItemsFromStorage= localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')):[]\n\nconst userInfoFromStorage= localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo')):null\n\nconst shippingAddressFromStorage= localStorage.getItem('shippingAddress')? JSON.parse(localStorage.getItem('shippingAddress')):{}\n\n\nconst initialState={\n    cart: {cartItems: cartItemsFromStorage, shippingAddress:shippingAddressFromStorage},  \n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware=[thunk]\n\nconst store= createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\n\nexport const productListReducer= (state={products:[]}, action) =>{\n    switch(action.type){\n        case PRODUCT_LIST_REQUEST:\n            return {loading:true,products:[]}\n        case PRODUCT_LIST_SUCCESS:\n            return {loading:false, products:action.payload} \n        case PRODUCT_LIST_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\nexport const productDetailsReducer= (state={product:{reviews:[]}}, action) =>{\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading:true,...state}\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading:false, product:action.payload} \n        case PRODUCT_DETAILS_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const productDeleteReducer= (state={}, action) =>{\n    switch(action.type){\n        case PRODUCT_DELETE_REQUEST:\n            return {loading:true}\n        case PRODUCT_DELETE_SUCCESS:\n            return {loading:false, success:true} \n        case PRODUCT_DELETE_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const productCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case PRODUCT_CREATE_REQUEST:\n            return {loading:true}\n        case PRODUCT_CREATE_SUCCESS:\n            return {loading:false, success:true, product:action.payload} \n        case PRODUCT_CREATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case PRODUCT_CREATE_RESET:\n            return {}    \n        default:\n            return state         \n    }\n}\n\nexport const productUpdateReducer= (state={product:{}}, action) =>{\n    switch(action.type){\n        case PRODUCT_UPDATE_REQUEST:\n            return {loading:true}\n        case PRODUCT_UPDATE_SUCCESS:\n            return {loading:false, success:true, product:action.payload} \n        case PRODUCT_UPDATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case PRODUCT_UPDATE_RESET:\n            return {product:{}}    \n        default:\n            return state         \n    }\n}\n\nexport const productReviewCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return {loading:true}\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return {loading:false, success:true} \n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading:false,error:action.payload}  \n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}   \n        default:\n            return state         \n    }\n}\n\nexport const productTopRatedReducer= (state={products:[]}, action) =>{\n    switch(action.type){\n        case PRODUCT_TOP_REQUEST:\n            return {loading:true,products:[]}\n        case PRODUCT_TOP_SUCCESS:\n            return {loading:false,products:action.payload} \n        case PRODUCT_TOP_FAIL:\n            return {loading:false,error:action.payload}  \n      \n        default:\n            return state         \n    }\n}","import { HELPER_CREATE_FAIL, HELPER_CREATE_REQUEST, HELPER_CREATE_RESET, HELPER_CREATE_REVIEW_FAIL, HELPER_CREATE_REVIEW_REQUEST, HELPER_CREATE_REVIEW_RESET, HELPER_CREATE_REVIEW_SUCCESS, HELPER_CREATE_SUCCESS, HELPER_DELETE_FAIL, HELPER_DELETE_REQUEST, HELPER_DELETE_SUCCESS, HELPER_DETAILS_FAIL, HELPER_DETAILS_REQUEST, HELPER_DETAILS_SUCCESS, HELPER_LIST_FAIL, HELPER_LIST_REQUEST, HELPER_LIST_SUCCESS, HELPER_UPDATE_FAIL, HELPER_UPDATE_REQUEST, HELPER_UPDATE_RESET, HELPER_UPDATE_SUCCESS } from '../constants/helperConstants'\n\nexport const helperListReducer= (state={helpers:[]}, action) =>{\n    switch(action.type){\n        case HELPER_LIST_REQUEST:\n            return {loading:true,helpers:[]}\n        case HELPER_LIST_SUCCESS:\n            return {loading:false, helpers:action.payload} \n        case HELPER_LIST_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const helperDetailsReducer= (state={helper:{reviews:[]}}, action) =>{\n    switch(action.type){\n        case HELPER_DETAILS_REQUEST:\n            return {loading:true,...state}\n        case HELPER_DETAILS_SUCCESS:\n            return {loading:false, helper:action.payload} \n        case HELPER_DETAILS_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const helperDeleteReducer= (state={}, action) =>{\n    switch(action.type){\n        case HELPER_DELETE_REQUEST:\n            return {loading:true}\n        case HELPER_DELETE_SUCCESS:\n            return {loading:false, success:true} \n        case HELPER_DELETE_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const helperCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case HELPER_CREATE_REQUEST:\n            return {loading:true}\n        case HELPER_CREATE_SUCCESS:\n            return {loading:false, success:true, helper:action.payload} \n        case HELPER_CREATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case HELPER_CREATE_RESET:\n            return {}    \n        default:\n            return state         \n    }\n}\n\nexport const helperUpdateReducer= (state={helper:{}}, action) =>{\n    switch(action.type){\n        case HELPER_UPDATE_REQUEST:\n            return {loading:true}\n        case HELPER_UPDATE_SUCCESS:\n            return {loading:false, success:true, helper:action.payload} \n        case HELPER_UPDATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case HELPER_UPDATE_RESET:\n            return {helper:{}}    \n        default:\n            return state         \n    }\n}\n\nexport const helperReviewCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case HELPER_CREATE_REVIEW_REQUEST:\n            return {loading:true}\n        case HELPER_CREATE_REVIEW_SUCCESS:\n            return {loading:false, success:true} \n        case HELPER_CREATE_REVIEW_FAIL:\n            return {loading:false,error:action.payload}  \n        case HELPER_CREATE_REVIEW_RESET:\n            return {}   \n        default:\n            return state         \n    }\n}","import { FOOD_CREATE_FAIL, FOOD_CREATE_REQUEST, FOOD_CREATE_RESET, FOOD_CREATE_REVIEW_FAIL, FOOD_CREATE_REVIEW_REQUEST, FOOD_CREATE_REVIEW_RESET, FOOD_CREATE_REVIEW_SUCCESS, FOOD_CREATE_SUCCESS, FOOD_DELETE_FAIL, FOOD_DELETE_REQUEST, FOOD_DELETE_SUCCESS, FOOD_DETAILS_FAIL, FOOD_DETAILS_REQUEST, FOOD_DETAILS_SUCCESS, FOOD_LIST_FAIL, FOOD_LIST_REQUEST, FOOD_LIST_SUCCESS, FOOD_UPDATE_FAIL, FOOD_UPDATE_REQUEST, FOOD_UPDATE_RESET, FOOD_UPDATE_SUCCESS } from '../constants/foodConstants'\n\nexport const foodListReducer= (state={foods:[]}, action) =>{\n    switch(action.type){\n        case FOOD_LIST_REQUEST:\n            return {loading:true,foods:[]}\n        case FOOD_LIST_SUCCESS:\n            return {loading:false, foods:action.payload} \n        case FOOD_LIST_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\nexport const foodDetailsReducer= (state={food:{reviews:[]}}, action) =>{\n    switch(action.type){\n        case FOOD_DETAILS_REQUEST:\n            return {loading:true,...state}\n        case FOOD_DETAILS_SUCCESS:\n            return {loading:false, food:action.payload} \n        case FOOD_DETAILS_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const foodDeleteReducer= (state={}, action) =>{\n    switch(action.type){\n        case FOOD_DELETE_REQUEST:\n            return {loading:true}\n        case FOOD_DELETE_SUCCESS:\n            return {loading:false, success:true} \n        case FOOD_DELETE_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const foodCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case FOOD_CREATE_REQUEST:\n            return {loading:true}\n        case FOOD_CREATE_SUCCESS:\n            return {loading:false, success:true, food:action.payload} \n        case FOOD_CREATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case FOOD_CREATE_RESET:\n            return {}    \n        default:\n            return state         \n    }\n}\n\nexport const foodUpdateReducer= (state={food:{}}, action) =>{\n    switch(action.type){\n        case FOOD_UPDATE_REQUEST:\n            return {loading:true}\n        case FOOD_UPDATE_SUCCESS:\n            return {loading:false, success:true, food:action.payload} \n        case FOOD_UPDATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case FOOD_UPDATE_RESET:\n            return {food:{}}    \n        default:\n            return state         \n    }\n}\n\nexport const foodReviewCreateReducer= (state={}, action) =>{\n    switch(action.type){\n        case FOOD_CREATE_REVIEW_REQUEST:\n            return {loading:true}\n        case FOOD_CREATE_REVIEW_SUCCESS:\n            return {loading:false, success:true} \n        case FOOD_CREATE_REVIEW_FAIL:\n            return {loading:false,error:action.payload}  \n        case FOOD_CREATE_REVIEW_RESET:\n            return {}   \n        default:\n            return state         \n    }\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\n\nexport const cartReducer= (state={cartItems:[], shippingAddress:{}},action)=>{\n    switch (action.type){\n        case CART_ADD_ITEM:\n            const item=action.payload\n\n            const existItem= state.cartItems.find((x)=> x.product===item.product)\n\n            if(existItem)\n            {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                    x.product===existItem.product? item:x\n                    ),\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems,item],\n                }\n            }\n            case CART_REMOVE_ITEM:\n                return {\n                    ...state,\n                    cartItems: state.cartItems.filter(x=>x.product!== action.payload),\n                }\n            case CART_SAVE_SHIPPING_ADDRESS:\n                 return {\n                        ...state,\n                        shippingAddress: action.payload,   \n                 }   \n            case CART_SAVE_PAYMENT_METHOD:\n                return {\n                        ...state,\n                        paymentMethod: action.payload,   \n                 }   \n            default: \n                return state \n\n    }\n\n}","import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS,USER_LIST_RESET, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_RESET, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from \"../constants/userConstants\"\n\nexport const userLoginReducer= (state={}, action) =>{\n    switch(action.type){\n        case USER_LOGIN_REQUEST:\n            return {loading:true}\n        case USER_LOGIN_SUCCESS:\n            return {loading:false, userInfo:action.payload} \n        case USER_LOGIN_FAIL:\n            return {loading:false,error:action.payload}  \n        case USER_LOGOUT:\n            return {}  \n        default:\n            return state         \n    }\n}\n\nexport const userRegisterReducer= (state={}, action) =>{\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return {loading:true}\n        case USER_REGISTER_SUCCESS:\n            return {loading:false, userInfo:action.payload} \n        case USER_REGISTER_FAIL:\n            return {loading:false,error:action.payload}  \n        default:\n            return state         \n    }\n}\n\nexport const userDetailsReducer= (state={ user:{}}, action) =>{\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return {...state,loading:true}\n        case USER_DETAILS_SUCCESS:\n            return {loading:false, user:action.payload} \n        case USER_DETAILS_FAIL:\n            return {loading:false,error:action.payload} \n        case USER_DETAILS_RESET:\n            return {user:{}}     \n        default:\n            return state         \n    }\n}\n\nexport const userUpdateProfileReducer= (state={}, action) =>{\n    switch(action.type){\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading:true}\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading:false,success:true, userInfo:action.payload} \n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading:false,error:action.payload}  \n        case USER_UPDATE_PROFILE_RESET:\n            return {}    \n        default:\n            return state         \n    }\n}\n\nexport const userListReducer= (state={users:[]}, action) =>{\n    switch(action.type){\n        case USER_LIST_REQUEST:\n            return {loading:true}\n        case USER_LIST_SUCCESS:\n            return {loading:false, users:action.payload} \n        case USER_LIST_FAIL:\n            return {loading:false,error:action.payload}  \n        case USER_LIST_RESET:\n            return {users:[]}    \n        default:\n            return state         \n    }\n}\nexport const userDeleteReducer= (state={}, action) =>{\n    switch(action.type){\n        case USER_DELETE_REQUEST:\n            return {loading:true}\n        case USER_DELETE_SUCCESS:\n            return {loading:false,success:true} \n        case USER_DELETE_FAIL:\n            return {loading:false,error:action.payload}  \n     \n        default:\n            return state         \n    }\n}\n\nexport const userUpdateReducer= (state={ user:{}}, action) =>{\n    switch(action.type){\n        case USER_UPDATE_REQUEST:\n            return {loading:true}\n        case USER_UPDATE_SUCCESS:\n            return {loading:false,success:true} \n        case USER_UPDATE_FAIL:\n            return {loading:false,error:action.payload}  \n        case USER_UPDATE_RESET:\n            return {user:{}}\n        default:\n            return state         \n    }\n}","import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,ORDER_DELIVER_REQUEST,ORDER_DELIVER_SUCCESS,ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET} from '../constants/orderConstants'\n\nexport const orderCreateReducer= (state={},action) =>{\n    switch(action.type){\n        case ORDER_CREATE_REQUEST:\n            return{\n                loading:true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return{\n                loading:false,\n                success:true,\n                order:action.payload\n            }    \n        case ORDER_CREATE_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }    \n        default:\n            return state    \n    }\n}\n\nexport const orderDetailsReducer= (state={loading:true,orderItems:[],shippingAddress:{}},action) =>{\n    switch(action.type){\n        case ORDER_DETAILS_REQUEST:\n            return{\n                ...state,\n                loading:true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return{\n                loading:false,\n                order:action.payload\n            }    \n        case ORDER_DETAILS_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }    \n        default:\n            return state    \n    }\n}\n\n\nexport const orderPayReducer= (state={},action) =>{\n    switch(action.type){\n        case ORDER_PAY_REQUEST:\n            return{\n                loading:true\n            }\n        case ORDER_PAY_SUCCESS:\n            return{\n                loading:false,\n                success:true,\n            }    \n        case ORDER_PAY_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }  \n        case ORDER_PAY_RESET:\n            return {}      \n        default:\n            return state    \n    }\n}\n\nexport const orderListMyReducer= (state={orders:[]},action) =>{\n    switch(action.type){\n        case ORDER_LIST_MY_REQUEST:\n            return{\n                loading:true\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return{\n                loading:false,\n                orders:action.payload,\n            }    \n        case ORDER_LIST_MY_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            } \n        case ORDER_LIST_MY_RESET:\n            return {orders:[]}     \n        default:\n            return state    \n    }\n}\n\nexport const orderListReducer= (state={orders:[]},action) =>{\n    switch(action.type){\n        case ORDER_LIST_REQUEST:\n            return{\n                loading:true\n            }\n        case ORDER_LIST_SUCCESS:\n            return{\n                loading:false,\n                orders:action.payload,\n            }    \n        case ORDER_LIST_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }   \n        default:\n            return state    \n    }\n}\n\nexport const orderDeliverReducer= (state={},action) =>{\n    switch(action.type){\n        case ORDER_DELIVER_REQUEST:\n            return{\n                loading:true\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return{\n                loading:false,\n                success:true,\n            }    \n        case ORDER_DELIVER_FAIL:\n            return{\n                loading:false,\n                error:action.payload,\n            }  \n        case ORDER_DELIVER_RESET:\n            return {}      \n        default:\n            return state    \n    }\n}\n","import React, {useState} from 'react'\nimport {Form,Button,Row,Col} from 'react-bootstrap'\n\n const SearchBox = ({history}) => {\n    const [keyword,setKeyword]= useState('')\n\n    const submitHandler= (e) =>{\n        e.preventDefault()\n        if(keyword.trim()){\n             history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Row>\n            <Col>\n            <Form.Control type='text' name='q' onChange={(e) =>setKeyword(e.target.value)} placeholder='Search Products...' className='py-0.715' style={{width:'300px'}}></Form.Control>\n            </Col>\n            <Col>\n            <Button type='submit' variant='outline-success' className='p-0.715'>Search</Button>\n            </Col>\n            </Row>\n        </Form>\n    )\n}\n\nexport default SearchBox","import axios from 'axios'\nimport {USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS,USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL,USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL} from '../constants/userConstants'\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\nexport const login = (email,password) => async(dispatch) =>{\n    try{\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers:{\n                'Content-Type':'application/json',\n            },\n        }\n\n        const {data}= await axios.post('/api/users/login',{email,password},config)\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n\n    } catch(error){\n        dispatch({type:USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n           })\n    }\n    }\n\n    export const logout = () => (dispatch) =>{\n        localStorage.removeItem('userInfo')\n        dispatch({\n            type:USER_LOGOUT\n        })\n        dispatch({type:USER_DETAILS_RESET})\n        dispatch({type:ORDER_LIST_MY_RESET})\n        dispatch({type:USER_LIST_RESET})\n    }\n\n    export const register = (name,email,password) => async(dispatch) =>{\n        try{\n            dispatch({\n                type: USER_REGISTER_REQUEST,\n            })\n    \n            const config = {\n                headers:{\n                    'Content-Type':'application/json',\n                },\n            }\n    \n            const {data}= await axios.post('/api/users',{name,email,password},config)\n    \n            dispatch({\n                type:USER_REGISTER_SUCCESS,\n                payload: data\n            })\n\n            dispatch({\n                type:USER_LOGIN_SUCCESS,\n                payload: data\n            })\n    \n            localStorage.setItem('userInfo',JSON.stringify(data))\n    \n        } catch(error){\n            dispatch({type:USER_REGISTER_FAIL,\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n               })\n        }\n        }  \n\n\n        export const getUserDetails = (id) => async(dispatch,getState) =>{\n            try{\n                dispatch({\n                    type: USER_DETAILS_REQUEST,\n                })\n\n                const { userLogin: {userInfo}} = getState()\n        \n                const config = {\n                    headers:{\n                        'Content-Type':'application/json',\n                        Authorization : `Bearer ${userInfo.token}`\n                    },\n                }\n        \n                const {data}= await axios.get(`/api/users/${id}`,config)\n        \n                dispatch({\n                    type:USER_DETAILS_SUCCESS,\n                    payload: data,\n                })  \n            } catch(error){\n                dispatch({type:USER_DETAILS_FAIL,\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                   })\n            }\n            } \n            \n            export const updateUserProfile = (user) => async(dispatch,getState) =>{\n                try{\n                    dispatch({\n                        type: USER_UPDATE_PROFILE_REQUEST,\n                    })\n    \n                    const { userLogin: {userInfo}} = getState()\n            \n                    const config = {\n                        headers:{\n                            'Content-Type':'application/json',\n                            Authorization : `Bearer ${userInfo.token}`\n                        },\n                    }\n            \n                    const {data}= await axios.put(`/api/users/profile`,user,config)\n             \n                    dispatch({\n                        type:USER_UPDATE_PROFILE_SUCCESS,\n                        payload: data\n                    })  \n                    \n                    dispatch({ \n                        type:USER_LOGIN_SUCCESS,\n                        payload: data\n                    }) \n                    \n                   localStorage.setItem('userInfo',JSON.stringify(data))\n\n                } catch(error){\n                    dispatch({type:USER_UPDATE_PROFILE_FAIL,\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                       })\n                }\n                } \n\n                export const listUsers = () => async(dispatch,getState) =>{\n                    try{\n                        dispatch({\n                            type: USER_LIST_REQUEST,\n                        })\n        \n                        const { userLogin: {userInfo}} = getState()\n                \n                        const config = {\n                            headers:{\n                                Authorization : `Bearer ${userInfo.token}`\n                            },\n                        }\n                \n                        const {data}= await axios.get(`/api/users`,config)\n                 \n                        dispatch({\n                            type:USER_LIST_SUCCESS,\n                            payload: data,\n                        })  \n    \n                    } catch(error){\n                        dispatch({type:USER_LIST_FAIL,\n                            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                           })\n                    }\n                    } \n\n                    export const deleteUser = (id) => async(dispatch,getState) =>{\n                        try{\n                            dispatch({\n                                type: USER_DELETE_REQUEST,\n                            })\n            \n                            const { userLogin: {userInfo}} = getState()\n                    \n                            const config = {\n                                headers:{\n                                    Authorization : `Bearer ${userInfo.token}`\n                                },\n                            }\n                    \n                            await axios.delete(`/api/users/${id}`,config)\n                     \n                            dispatch({\n                                type:USER_DELETE_SUCCESS,\n                            })  \n        \n                        } catch(error){\n                            dispatch({type:USER_DELETE_FAIL,\n                                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                               })\n                        }\n                        }    \n                        \n               \n                        export const updateUser = (user) => async(dispatch,getState) =>{\n                            try{\n                                dispatch({\n                                    type: USER_UPDATE_REQUEST,\n                                })\n                \n                                const { userLogin: {userInfo}} = getState()\n                        \n                                const config = {\n                                    headers:{\n                                        'Content-Type':'application/json',\n                                        Authorization : `Bearer ${userInfo.token}`\n                                    },\n                                }\n                        \n                               const {data}= await axios.put(`/api/users/${user._id}`,user,config)\n                         \n                                dispatch({\n                                    type:USER_UPDATE_SUCCESS,\n                                })  \n                                dispatch({\n                                    type:USER_DETAILS_SUCCESS,\n                                    payload:data\n                                }) \n            \n                            } catch(error){\n                                dispatch({type:USER_UPDATE_FAIL,\n                                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                                   })\n                            }\n                            }               ","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {useDispatch,useSelector} from 'react-redux'\nimport SearchBox from './SearchBox'\nimport {LinkContainer} from 'react-router-bootstrap';\nimport { Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\nimport {logout} from '../actions/userActions'\nconst Header = () => { \n      \n    const dispatch= useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    const logoutHandler= () =>{\n      dispatch(logout())\n    }\n\n\n    return (\n     <header>\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect> \n          <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand >Artisans</Navbar.Brand>\n          </LinkContainer> \n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">  \n            <Route render={({history}) => <SearchBox history={history} />} />\n             <Nav className='ml-auto'>\n              <NavDropdown title=\"Promotion\" id=\"basic-nav-dropdown\">\n               <LinkContainer to=\"/helpers\">\n               <NavDropdown.Item>Services</NavDropdown.Item>\n               </LinkContainer>\n               <LinkContainer to=\"/foods\">\n               <NavDropdown.Item>Famous Food</NavDropdown.Item>\n               </LinkContainer>\n                <NavDropdown.Divider />\n              </NavDropdown>\n              <LinkContainer to=\"/products\">\n              <Nav.Link> Products </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/cart\">\n              <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\n              </LinkContainer>\n              {userInfo? ( \n                  <NavDropdown title={userInfo.name} id='username'>\n                    <LinkContainer to='/profile'>\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\n                    </LinkContainer>\n                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                  </NavDropdown>\n              ) :( \n                <LinkContainer to=\"/login\">\n                   <Nav.Link href=\"/login\"><i className='fas fa-user'></i> Sign In</Nav.Link>\n                 </LinkContainer>\n               )}\n               {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                    <LinkContainer to='/admin/userlist'>\n                      <NavDropdown.Item>Users</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to='/admin/productlist'>\n                      <NavDropdown.Item>Products</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to='/admin/orderlist'>\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to='/admin/helperlist'>\n                      <NavDropdown.Item>Services</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to='/admin/foodlist'>\n                      <NavDropdown.Item>Foods</NavDropdown.Item>\n                    </LinkContainer>\n               </NavDropdown>\n               )}\n             </Nav> \n            </Navbar.Collapse>\n            </Container>\n            </Navbar>\n     </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst current_date=new Date();\nconst current_year=current_date.getFullYear();\nconst Footer = () => {\n    return (\n        <footer>\n        <Container>\n            <Row>\n                <Col className=\"text-center py-3\"> Copyright &copy; Artisans {current_year}</Col>\n            </Row>\n        </Container>\n           \n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport {Helmet} from 'react-helmet'\n\n const Meta = ({title,description,keywords}) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keywords' content={keywords} />\n\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title:'Welcome to Vivokal',\n    description:'Find The Local Products for the cheapest prices',\n    keywords:'Explore The Products of Local Indian Entrepenuers',\n}\n\n\n\n\nexport default Meta\n","import React from 'react'\nimport {Carousel,Row,Col,Image} from 'react-bootstrap'\nimport Meta from '../components/Meta'\nconst HomeScreens = () => {\n    return (\n        <>\n         <Meta title='Home' />\n            <section  style={{textAlign:'center'}}>\n               <Row>\n                   <Col sm={12} >  \n                    <Image style={{width:'450px'}}  src=\"images/dist.png\"  fluid/>\n                   </Col>\n               </Row>\n               \n                <div>\n                    <h1>\n                        Welcome To E commerce\n                    </h1>\n                    <h4>\n                        The Place where you find local Entreprenuers and their products and services.\n                    </h4>\n                </div>\n            </section>\n            <br/>\n            <br/>\n            <section>\n                <div>\n                    <p style={{fontSize:'20px'}}>\n                    As the world surrendered to a global pandemic, our borderless lives were replaced with the need to look inwards. However while the world recuperates – and rightly so – the extraordinary COVID-19 situation has forced us to take a simple step back to our roots. Bringing local entrepreneurs and indigenous-influenced industries into the spotlight, the recent push for Indian brands has been a blessing in disguise. Not only has it helped replenish the national economy but also championed its creativity and sustainability. Indian designers across the spectrum have begun championing native styles through their respective mediums. Despite being a way of perpetuating the country’s rich culture, the new campaign has upheld the livelihood of the industry’s real backbone – countless weavers, craftspeople and tailors that bring the Indian ideal into reality.\nContinuing our push to be #VocalForLocal,<bold> Artisans </bold>is paying ode to remarkable local entrepreneurs that are promoting Indian sensibilities through mediums of arts, handicrafts, services and food.\n                    </p>\n                </div>\n            </section>\n            <br />\n            <br />\n            <br />\n            <section  style={{textAlign:'center'}}>\n            <Row> \n            <Col lg={4} md={6} sm={12}>\n                <div>\n                    <Image src='/images/foods.jpg' style={{width:'400px',padding:'7%'}} fluid/>\n                    <h4>#LOCALFOODS</h4>\n                    <h5>The Taste Of India</h5>\n                </div> \n            </Col> \n            <Col lg={4} md={6} sm={12}>\n                <div>\n                    <Image src='/images/handicrafts.jpg' style={{width:'400px',padding:'7%'}} fluid />\n                    <h4>#LOCALHANDICRAFTS</h4>\n                    <h5>The Vibe Of India</h5>\n                </div> \n            </Col>     \n            <Col lg={4} md={6} sm={12}>\n                <div>\n                    <Image src='/images/services.jpg' style={{width:'400px',padding:'7%'}} fluid />\n                    <h4>#LOCALSERVICES</h4>\n                    <h5>The Help Of India</h5>\n                </div> \n            </Col>                 \n            </Row>\n            </section>\n            <br />\n            <br />\n            <br />\n            <section  style={{textAlign:'center'}}>\n                 <h3>Why Shop Local?</h3>\n                  <Row>\n                  <Col lg={4} md={6} sm={12}>\n                <div>\n                <Image src='/images/baglove.png'  style={{width:'155px',padding:'7%'}} />\n                    <h4>Love Where You Live</h4>\n                    <p>For every Rupee spent at a Local Business, about <bold>₹0.89</bold>stays in the community.</p>\n                     <h5>#PURCHASEWITHPURPOSE</h5>                    \n                </div>\n                </Col>\n                <Col lg={4} md={6} sm={12}>\n                <div>\n                    <i className=\"fas fa-smile-beam fa-6x\"  style={{color:'#ef8172',padding:'8%'}}></i>\n                    <h4>Supporl local Support small</h4>\n                    <p>When you buy from a small business,an actual person does a little happy dance.</p>\n                     <h5>Artisans</h5>\n                </div>\n                </Col>\n                  \n                <Col lg={4} md={6} sm={12}>\n                <div>\n                    <Image src='/images/homeheart.png'  style={{width:'155px',padding:'7%'}} />\n                    <h4>For the Love of Local</h4>\n                    <p>Love local and Live local</p>\n                     <h5>#SHOPLOCAL</h5>\n                </div>\n                </Col> \n                </Row>\n            </section>\n           <br />\n           <br />\n           <br />\n          \n\n           <section  style={{textAlign:'center',backgroundColor:'black'}} >\n           <br />\n           <br />\n           <h1 style={{color:'#fff'}} >Our Users Opinions</h1>\n           <br/>\n        \n             <Carousel style={{padding:'5%'}}>\n                \n                <Carousel.Item as=\"div\" style={{padding:'5%'}}>\n                   <h3 style={{color:'#fff'}}>“Going local does not mean walling off the outside world. It Means nurturing locally owned businesses which use local resources sustainably and serve primarily local consumers.”</h3>\n                   <br />\n                   <br />\n                   <br />\n                   <h5 style={{color:'#fff'}}>Pradeep</h5>\n                </Carousel.Item>\n               <Carousel.Item as=\"div\" style={{padding:'5%'}} >\n                    <h3 style={{color:'#fff'}}>“When you visit an independent local business,You celebrate the uniqueness of your community and encourage local prosperity.”</h3>\n                   <Image roundedCircle style={{width:'150px'}}  alt=\"\" />\n                   <br />\n                   <br />\n                   <br />\n                   <h5 style={{color:'#fff'}}>Jagadeesh</h5>\n                </Carousel.Item>\n               <Carousel.Item as=\"div\" style={{padding:'5%'}}>\n                    <h3 style={{color:'#fff'}}>“Money spent locally stays local, Environmentally better and Backbone of any town or city.”</h3>\n                    <br />\n                   <br />\n                   <br />\n                    <h5 style={{color:'#fff'}}>Harsha</h5>\n                    </Carousel.Item>\n                </Carousel>    \n                <br />    \n           </section>\n           <br />\n           <br />\n            <section  style={{textAlign:'center'}}>\n            <h3>Our Initiatives and Missions</h3>\n            <Row> \n            <Col lg={3} md={6} sm={6}>\n                <div>\n                    <Image src='/images/makeinindia.png'  style={{width:'300px',height:'200px',padding:'7%'}} />\n                </div> \n            </Col> \n            <Col lg={3} md={6} sm={6}>\n                <div>\n                    <Image src='/images/vocal.png'  style={{width:'200px',padding:'7%'}} />\n                </div> \n            </Col>     \n            <Col lg={3} md={6} sm={6}>\n                <div>\n                    <Image src='/images/sri.png'  style={{width:'200px',padding:'7%'}} />\n                </div> \n            </Col>     \n            <Col lg={3} md={6} sm={6}>\n                <div>\n                    <Image src='/images/local.jpeg'  style={{width:'200px',padding:'7%'}} />\n                </div> \n            </Col>             \n            </Row>\n            </section>\n\n            <br />\n            <br />\n            <br />\n\n            <section style={{textAlign:'center'}}> \n                <h3>Contact Us</h3>\n                <h5>Reach out to us for Associations and Collaborations at: </h5>\n                <p style={{fontSize:'25px'}}><a href='mailto:Arisans@gmail.com'>Artisans@gmail.com</a></p>\n            </section>\n\n            <br />\n            <br />\n\n            <section style={{textAlign:'center'}}>\n                 <h3>Connect Us On</h3>\n                 <i  className='social-icon fab fa-facebook fa-2x'></i>\n                 <i  className='social-icon fab fa-twitter fa-2x'></i>\n                 <i  className='social-icon fab fa-instagram fa-2x'></i>\n                 <i  className='social-icon fab fa-linkedin-in fa-2x'></i>\n            </section>\n\n        </>\n    )\n}\n\nexport default HomeScreens\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Rating = ({value,text,color}) => {\n    return (\n        <div className=\"rating\">\n          <span>\n              <i style={{color}} className={value>=1 ?'fas fa-star': value>=0.5? 'fas fa-star-half-alt':'far fa-star'}></i>\n          </span>  \n          <span>\n              <i style={{color}} className={value>=2 ?'fas fa-star': value>=1.5? 'fas fa-star-half-alt':'far fa-star'}></i>\n          </span>  \n          <span>\n              <i style={{color}} className={value>=3 ?'fas fa-star': value>=2.5? 'fas fa-star-half-alt':'far fa-star'}></i>\n          </span>  \n          <span>\n              <i style={{color}} className={value>=4 ?'fas fa-star': value>=3.5? 'fas fa-star-half-alt':'far fa-star'}></i>\n          </span>  \n          <span>\n              <i style={{color}} className={value>=5 ?'fas fa-star': value>=4.5? 'fas fa-star-half-alt':'far fa-star'}></i>\n          </span> \n          <span>  {text && text}</span> \n        </div>\n    )\n}\n \nRating.defaultProps={\n    color: '#f8e825',\n}\n \nRating.propTypes={\n    value:PropTypes.number.isRequired,\n    text:PropTypes.string.isRequired,\n    color:PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap'\nimport Rating from './Rating'\nconst Product = ({product}) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/product/${product._id}`}>\n            <Card.Img className=\"img-Change\"src={product.image} variant=\"top\" />\n        </Link>\n        <Card.Body>\n          <Link to={`/product/${product._id}`}>\n            <Card.Title as='div'>\n                <strong>{product.name}</strong>\n            </Card.Title>\n          </Link>\n        <Card.Text as=\"div\">\n            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n        </Card.Text>\n        <Card.Text as=\"h3\">\n        ₹ {product.price}\n        </Card.Text>\n        </Card.Body>\n\n        </Card>\n    )\n}\n\nexport default Product;\n","import React from 'react'\nimport {Alert} from 'react-bootstrap'\n\nconst Message = ({variant,children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps={\n    variant:'info',\n}\n\nexport default Message\n","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status'\n           style={{\n               width:'100px',\n               height:'100px',\n               margin:'auto',\n               display:'block',\n           }}\n           >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_FAIL,PRODUCT_CREATE_SUCCESS,PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_SUCCESS,PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\nimport axios from 'axios'\n\nexport const listProducts= (keyword='') => async(dispatch) =>{\n    try{\n        dispatch({type:PRODUCT_LIST_REQUEST})\n        const {data}= await axios.get(`/api/products?keyword=${keyword}`)\n        dispatch({type:PRODUCT_LIST_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:PRODUCT_LIST_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const listProductDetails= (id) => async(dispatch) =>{\n    try{\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\n        const {data}= await axios.get(`/api/products/${id}`)\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:PRODUCT_DETAILS_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const listSellerDetails= (id) => async(dispatch) =>{\n    try{\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\n        const {data}= await axios.get(`/api/products/${id}/seller`)\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:PRODUCT_DETAILS_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const deleteProduct = (id) => async(dispatch,getState) =>{\n    try{\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST,\n        })\n\n        const { userLogin: {userInfo},} = getState()\n\n        const config = {\n            headers:{\n                Authorization : `Bearer ${userInfo.token}`, \n            },\n        }\n\n         await axios.delete(`/api/products/${id}`,config)\n \n        dispatch({\n            type:PRODUCT_DELETE_SUCCESS,\n            \n        })  \n\n    } catch(error){\n        dispatch({type:PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n           })\n    }\n    }   \n    \n    export const createProduct = () => async(dispatch,getState) =>{\n        try{\n            dispatch({\n                type: PRODUCT_CREATE_REQUEST,\n            })\n    \n            const { userLogin: {userInfo},} = getState()\n    \n            const config = {\n                headers:{\n                    Authorization : `Bearer ${userInfo.token}`, \n                },\n            }\n    \n            const {data}= await axios.post(`/api/products`,{},config)\n     \n            dispatch({\n                type:PRODUCT_CREATE_SUCCESS,\n                payload:data \n                \n            })  \n    \n        } catch(error){\n            dispatch({type:PRODUCT_CREATE_FAIL,\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n               })\n        }\n        }    \n\n        export const updateProduct = (product) => async(dispatch,getState) =>{\n            try{\n                dispatch({\n                    type: PRODUCT_UPDATE_REQUEST,\n                })\n        \n                const { userLogin: {userInfo},} = getState()\n        \n                const config = {\n                    headers:{\n                        'Content-Type':'application/json',\n                        Authorization : `Bearer ${userInfo.token}`, \n                    },\n                }\n        \n                const {data}= await axios.put(`/api/products/${product._id}`,product,config)\n         \n                dispatch({\n                    type:PRODUCT_UPDATE_SUCCESS,\n                    payload:data \n                    \n                })  \n        \n            } catch(error){\n                dispatch({type:PRODUCT_UPDATE_FAIL,\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                   })\n            }\n            }  \n            \n            export const createProductReview = (productId,review) => async(dispatch,getState) =>{\n                try{\n                    dispatch({\n                        type: PRODUCT_CREATE_REVIEW_REQUEST,\n                    })\n            \n                    const { userLogin: {userInfo},} = getState()\n            \n                    const config = {\n                        headers:{\n                            'Content-Type':'application/json',\n                            Authorization : `Bearer ${userInfo.token}`, \n                        },\n                    }\n            \n                 await axios.post(`/api/products/${productId}/reviews`,review,config)\n             \n                    dispatch({\n                        type:PRODUCT_CREATE_REVIEW_SUCCESS,\n                        \n                    })  \n            \n                } catch(error){\n                    dispatch({type:PRODUCT_CREATE_REVIEW_FAIL,\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                       })\n                }\n                }  \n\n                export const listTopProducts= () => async(dispatch) =>{\n                    try{\n                        dispatch({type:PRODUCT_TOP_REQUEST})\n                        const {data}= await axios.get(`/api/products/top`)\n                        dispatch({type:PRODUCT_TOP_SUCCESS,\n                        payload:data,\n                        })\n                } catch(error){\n                    dispatch({type:PRODUCT_TOP_FAIL,\n                     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                    })\n                }\n                }\n                ","import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { useDispatch,useSelector} from 'react-redux'\nimport {Carousel,Image} from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport {listTopProducts} from '../actions/productActions'\n\nconst ProductCarousel = () => {\n    const dispatch= useDispatch()\n    const productTopRated= useSelector(state =>state.productTopRated )\n    const {loading,error,products}= productTopRated\n\n    useEffect(()=>{\n        dispatch(listTopProducts())\n    },[dispatch])\n\n    return  loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n        <>\n        <h1 style={{textAlign:'center'}}>Top Rated Products</h1>\n        <br />\n        <Carousel pause='hover' className='bg-dark' style={{textAlign:'center'}}>\n            {products.map(product =>(\n                <Carousel.Item key={product._id}>\n                    <Link to={`/product/${product._id}`}>\n                        <Image roundedCircle style={{height:'300px', padding:'30px', margin:'40px'}} src={product.image} alt={product.name} fluid />\n                        <Carousel.Caption style={{position:'absolute',top:'0'}}>\n                             <h2 style={{color:'#fff'}}>{product.name} (₹ {product.price})</h2>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n        </>\n    )\n}\n\nexport default ProductCarousel","import React, { useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Row, Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport ProductCarousel from '../components/ProductCarousel'\nimport {listProducts} from '../actions/productActions'\nconst ProductsScreens = ({match}) => {\n \n    const keyword=match.params.keyword\n\n  \n\n    const dispatch = useDispatch()\n    const productList= useSelector(state=>state.productList)\n    const {loading,error,products}= productList \n\n    useEffect(()=>{\n        dispatch(listProducts(keyword))\n    }, [dispatch,keyword])\n\n    \n    return (\n        <>\n        {!keyword ? <ProductCarousel />: <Link to='/products'className='btn btn-dark'>Go Back</Link>}\n            <br />\n            <h1 style={{textAlign:'center'}}> Our Latest Products</h1>\n            {loading? (<Loader />):error?(<Message variant='danger'>{error}</Message>): \n            (\n            <>\n            <Meta title='Products' />\n              <Row>\n                {products.map(product =>(\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                         <Product product={product} />\n                     </Col>\n                 ))}\n              </Row>\n            </>\n            )}\n             \n        </>\n    )\n}\n\nexport default ProductsScreens\n","import React,{ useState,useEffect }from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col , Image , ListGroup, Card, Button, Form , option} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport Message from '../components/Message'\n\nimport {listProductDetails,createProductReview} from '../actions/productActions'\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n\nconst ProductScreens = ({history,match}) => {\n\n    const [qty,setQty]= useState(1)\n    const [rating,setRating]= useState(0)\n    const [comment,setComment]= useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails= useSelector(state=> state.productDetails)\n    const {loading,error,product}=productDetails\n\n    const userLogin= useSelector(state=> state.userLogin)\n    const {userInfo}=userLogin\n\n    const productReviewCreate= useSelector(state=> state.productReviewCreate)\n    const {success:successProductReview,error:errorProductReview}=productReviewCreate\n\n    useEffect(()=>{\n         if(successProductReview){\n             alert('Review Submitted')\n             setRating(0)\n             setComment('')\n             dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\n         }\n\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch,match,successProductReview]) \n    \n    const addToCartHandler= () =>{\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler= (e) =>{\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id,{\n            rating,\n            comment\n        }))\n    }\n\n    return (\n        <>\n           <Link className=\"btn btn-dark my-3\" to=\"/products\">\n               Go Back\n           </Link>\n            {loading? (<Loader />) : error? (<Message variant='danger'>{error}</Message>):( \n                <>\n                <Meta title={product.name} />\n                <Row>\n               <Col md={6}>\n                <Image className=\"img-screens\"src={product.image} alt={product.name} fluid />\n               </Col>\n               <Col md={3}>\n                  <ListGroup variant='flush'>\n                   <ListGroup.Item>\n                       <h2>{product.name}</h2>\n                   </ListGroup.Item>\n                 <ListGroup.Item>\n                     <Rating value={product.rating} text={`${product.numReviews} reviews `} />\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                  <h3> Price: ₹ {product.price} </h3>\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                   Description: {product.description}\n                 </ListGroup.Item>\n                  </ListGroup>\n               </Col>\n               <Col md={3}>\n                   <Card>\n                       <ListGroup variant='flush'>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       Price:\n                                   </Col>\n                                   <Col>\n                                       <strong>₹ {product.price}</strong>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       Status:\n                                   </Col>\n                                   <Col>\n                                       {product.countInStock>0 ? 'In Stock': 'Out Of Stock'}\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item>  \n                           {product.countInStock>0 &&(\n                               <ListGroup.Item>\n                                   <Row>\n                                       <Col>\n                                           Qty\n                                       </Col>\n                                       <Col>\n                                           <Form.Control as='select' value={qty} onChange={(e)=>\n                                            setQty(e.target.value)}\n                                            >\n                                            {\n                                             [...Array(product.countInStock).keys()].map((x) =>(\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            ))}\n                                           </Form.Control>\n                                       </Col>\n                                   </Row>\n                               </ListGroup.Item>\n                           )} \n                           <ListGroup.Item>\n                                    <Button  onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock===0}>\n                                           Add To Cart\n                                    </Button>\n                           </ListGroup.Item>\n                       </ListGroup>\n                   </Card>\n                   <Card className=\"my-3 p-3 rounded\">\n                   <h3> </h3>\n        <Link to={`/product/${product._id}/seller`}>\n            <Card.Img className=\"img-Change\"src={product.sellerImage} variant=\"top\" />\n        </Link>\n        <Card.Body>\n          <Link to={`/product/${product._id}/seller`}>\n            <Card.Title as='div'>\n                <strong>{product.sellerName}</strong>\n            </Card.Title>\n          </Link>\n        <Card.Text as=\"div\">\n         <strong>Contact:</strong> {product.sellerContact}\n        </Card.Text>\n        <br />\n        <Link to={`/product/${product._id}/seller`}>\n            <Card.Text as='div'>\n                <strong>Read More</strong>\n            </Card.Text>\n        </Link>\n        </Card.Body>\n        </Card>\n               </Col>\n           </Row>\n          <Row>\n               <Col md={6}>\n                   <h2>Reviews</h2>\n                   {product.reviews.length===0 && <Message>No Reviews</Message>} \n                   <ListGroup variant='flush'>\n                      {product.reviews.map(review => (\n                          <ListGroup.Item key={review._id}>\n                             <strong>{review.name}</strong>\n                             <Rating value={review.rating} />\n                             <p>{review.createdAt.substring(0,10)}</p>\n                             <p>{review.comment}</p>\n                          </ListGroup.Item>\n                      ))}\n                      <ListGroup.Item>\n                          <h2>Write a Customer Review</h2>\n                          {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n                          {userInfo? (\n                              <Form onSubmit={submitHandler}>\n                                  <Form.Group controlId='rating'>\n                                      <Form.Label>Rating</Form.Label>\n                                      <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                          <option value=''>Select...</option>\n                                          <option value='1'>1 - Poor</option>\n                                          <option value='2'>2 - Fair</option>\n                                          <option value='3'>3 - Good</option>\n                                          <option value='4'>4 - Very Good</option>\n                                          <option value='5'>5 - Excellent</option>\n                                      </Form.Control>\n                                  </Form.Group>\n                                  <Form.Group controlId='comment'>\n                                    <Form.Label>Comment</Form.Label>\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}>\n                                    </Form.Control>\n                                  </Form.Group>\n                                  <br />\n                                  <Button type='submit' variant='primary'>\n                                      Submit\n                                  </Button>\n                              </Form>\n                          )\n                          : <Message>Please <Link to='/login'>Sign In</Link> to post a Review</Message>}\n                      </ListGroup.Item>\n                   </ListGroup>\n               </Col>\n          </Row>\n          </>\n            )}            \n        </>\n    )\n}\n\nexport default ProductScreens\n","import React,{ useEffect }from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col ,Image, ListGroup, Card } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {listSellerDetails} from '../actions/productActions'\n\nconst SellerScreens = ({match}) => {\n   const dispatch= useDispatch()\n   const productDetails=useSelector(state=> state.productDetails)\n   const {loading,error,product}=productDetails \n    useEffect(()=>{\n        dispatch(listSellerDetails(match.params.id))\n    }, [dispatch,match])\n    return (\n        <>\n           <Link className=\"btn btn-dark my-3\" to={`/product/${product._id}`}>\n               MINIMIZE\n           </Link>\n           {loading?(<Loader />): error? (<Message varaint='danger'>{error}</Message>): (\n            <Row>\n               <Col md={6}>\n                 <Image className=\"img-screens\"src={product.sellerImage} alt={product.sellerName} fluid/>\n               </Col>\n               <Col md={3}>\n                  <ListGroup variant='flush'>\n                   <ListGroup.Item>\n                       <h2>{product.sellerName}</h2>\n                   </ListGroup.Item>\n                 <ListGroup.Item>\n                   Description:  {product.sellerDescription}\n                 </ListGroup.Item>\n                  </ListGroup>\n               </Col>\n               <Col md={3}>\n                   <Card>\n                       <ListGroup variant='flush'>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                      <h4>Address</h4>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       {product.sellerAddress}\n                                   </Col>      \n                               </Row>\n                           </ListGroup.Item>  \n                       </ListGroup>\n                   </Card>\n               </Col>\n           </Row>\n           )}\n        </>\n    )\n}\n\nexport default SellerScreens\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap'\nimport Rating from './Rating'\nconst Helper = ({helper}) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/helper/${helper._id}`}>\n            <Card.Img className=\"img-Change\"src={helper.image} variant=\"top\" />\n        </Link>\n        <Card.Body>\n          <Link to={`/helper/${helper._id}`}>\n            <Card.Title as='div'>\n                <strong>{helper.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as=\"div\">\n            <Rating value={helper.rating} text={`${helper.numReviews} reviews`} />\n        </Card.Text>  \n        <Card.Text as=\"div\">\n            {helper.occupation_type}\n        </Card.Text>\n        <Card.Text as=\"div\">\n         <strong>Contact:</strong> {helper.contact}\n        </Card.Text>\n        </Card.Body>\n\n        </Card>\n    )\n}\n\nexport default Helper;\n","import { HELPER_CREATE_FAIL, HELPER_CREATE_REQUEST, HELPER_CREATE_REVIEW_FAIL, HELPER_CREATE_REVIEW_REQUEST, HELPER_CREATE_REVIEW_SUCCESS, HELPER_CREATE_SUCCESS, HELPER_DELETE_FAIL, HELPER_DELETE_REQUEST, HELPER_DELETE_SUCCESS, HELPER_DETAILS_FAIL, HELPER_DETAILS_REQUEST, HELPER_DETAILS_SUCCESS, HELPER_LIST_FAIL, HELPER_LIST_REQUEST, HELPER_LIST_SUCCESS, HELPER_UPDATE_FAIL, HELPER_UPDATE_REQUEST, HELPER_UPDATE_SUCCESS } from '../constants/helperConstants'\nimport axios from 'axios'\n\nexport const listHelpers= () => async(dispatch) =>{\n    try{\n        dispatch({type:HELPER_LIST_REQUEST})\n        const {data}= await axios.get(`/api/helpers`)\n        dispatch({type:HELPER_LIST_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:HELPER_LIST_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const listHelperDetails= (id) => async(dispatch) =>{\n    try{\n        dispatch({type:HELPER_DETAILS_REQUEST})\n        const {data}= await axios.get(`/api/helpers/${id}`)\n        dispatch({type:HELPER_DETAILS_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:HELPER_DETAILS_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const deleteHelper = (id) => async(dispatch,getState) =>{\n    try{\n        dispatch({\n            type: HELPER_DELETE_REQUEST,\n        })\n\n        const { userLogin: {userInfo},} = getState()\n\n        const config = {\n            headers:{\n                Authorization : `Bearer ${userInfo.token}`, \n            },\n        }\n\n         await axios.delete(`/api/helpers/${id}`,config)\n \n        dispatch({\n            type:HELPER_DELETE_SUCCESS,\n            \n        })  \n\n    } catch(error){\n        dispatch({type:HELPER_DELETE_FAIL,\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n           })\n    }\n    }   \n    \n    export const createHelper = () => async(dispatch,getState) =>{\n        try{\n            dispatch({\n                type: HELPER_CREATE_REQUEST,\n            })\n    \n            const { userLogin: {userInfo},} = getState()\n    \n            const config = {\n                headers:{\n                    Authorization : `Bearer ${userInfo.token}`, \n                },\n            }\n    \n            const {data}= await axios.post(`/api/helpers`,{},config)\n     \n            dispatch({\n                type:HELPER_CREATE_SUCCESS,\n                payload:data \n                \n            })  \n    \n        } catch(error){\n            dispatch({type:HELPER_CREATE_FAIL,\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n               })\n        }\n        }    \n\n        export const updateHelper = (helper) => async(dispatch,getState) =>{\n            try{\n                dispatch({\n                    type: HELPER_UPDATE_REQUEST,\n                })\n        \n                const { userLogin: {userInfo},} = getState()\n        \n                const config = {\n                    headers:{\n                        'Content-Type':'application/json',\n                        Authorization : `Bearer ${userInfo.token}`, \n                    },\n                }\n        \n                const {data}= await axios.put(`/api/helpers/${helper._id}`,helper,config)\n         \n                dispatch({\n                    type:HELPER_UPDATE_SUCCESS,\n                    payload:data \n                    \n                })  \n        \n            } catch(error){\n                dispatch({type:HELPER_UPDATE_FAIL,\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                   })\n            }\n            }   \n            \n            export const createHelperReview = (helperId,review) => async(dispatch,getState) =>{\n                try{\n                    dispatch({\n                        type: HELPER_CREATE_REVIEW_REQUEST,\n                    })\n            \n                    const { userLogin: {userInfo},} = getState()\n            \n                    const config = {\n                        headers:{\n                            'Content-Type':'application/json',\n                            Authorization : `Bearer ${userInfo.token}`, \n                        },\n                    }\n            \n                 await axios.post(`/api/helpers/${helperId}/reviews`,review,config)\n             \n                    dispatch({\n                        type:HELPER_CREATE_REVIEW_SUCCESS,\n                        \n                    })  \n            \n                } catch(error){\n                    dispatch({type:HELPER_CREATE_REVIEW_FAIL,\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                       })\n                }\n                }  ","import React, { useEffect } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Row, Col} from 'react-bootstrap'\nimport Helper from '../components/Helper'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {listHelpers} from '../actions/helperActions'\n\nconst HelpersScreens = () => {\n    const dispatch= useDispatch()\n    const helperList=useSelector(state=>state.helperList)\n    const {loading,error,helpers}= helperList\n\n    useEffect(()=>{\n        dispatch(listHelpers())\n    }, [dispatch])\n    return (\n        <>\n            <h1> Our Associated FreeLancers and Part-Timers</h1>\n            <h4>Opting local delivers the best customer service.</h4>\n            {loading? (<Loader />): error?(<Message variant='danger'>{error}</Message>):(\n               <>\n               <Meta title='Services' />\n                <Row>\n                 {helpers.map(helper =>(\n                     <Col key={helper._id} sm={12} md={6} lg={4} xl={3}>\n                         <Helper helper={helper} />\n                     </Col>\n                 ))}\n            </Row>\n            </>\n            )}\n        </>\n    )\n}\n\nexport default HelpersScreens","import React,{useState, useEffect }from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col ,Image, ListGroup, Card,Form,Button } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport {listHelperDetails,createHelperReview} from '../actions/helperActions'\nimport {HELPER_CREATE_REVIEW_RESET} from '../constants/helperConstants'\n\nconst HelperScreens = ({history,match}) => {\n    const [rating,setRating]= useState(0)\n    const [comment,setComment]= useState('')\n\n    const dispatch= useDispatch()\n    const helperDetails=useSelector(state=>state.helperDetails)\n    const {loading,error,helper}=helperDetails \n\n    const userLogin= useSelector(state=> state.userLogin)\n    const {userInfo}=userLogin\n\n    const helperReviewCreate= useSelector(state=> state.helperReviewCreate)\n    const {success:successHelperReview,error:errorHelperReview}=helperReviewCreate\n\n    useEffect(()=>{\n        if(successHelperReview){\n            alert('Review Submitted')\n            setRating(0)\n            setComment('')\n            dispatch({type:HELPER_CREATE_REVIEW_RESET})\n        }\n       dispatch(listHelperDetails(match.params.id))\n    }, [dispatch,match,successHelperReview])\n\n    const submitHandler= (e) =>{\n        e.preventDefault()\n        dispatch(createHelperReview(match.params.id,{\n            rating,\n            comment\n        }))\n    }\n\n\n    return (\n        <>\n           <Link className=\"btn btn-dark my-3\" to=\"/helpers\">\n               Go Back\n           </Link>\n           {loading?(<Loader />): error? (<Message varaint='danger'>{error}</Message>): (\n            <>\n            <Meta title={helper.name} />\n            <Row>\n               <Col md={6}>\n                 <Image className=\"img-screens\"src={helper.image} alt={helper.name} fluid/>\n               </Col>\n               <Col md={3}>\n                  <ListGroup variant='flush'>\n                   <ListGroup.Item>\n                       <h2>{helper.name}</h2>\n                   </ListGroup.Item>\n                   <ListGroup.Item>\n                     <Rating value={helper.rating} text={`${helper.numReviews} reviews `} />\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                  <h3> Provides Services as:   {helper.occupation_type}</h3>\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                   Description:  {helper.description}\n                 </ListGroup.Item>\n                  </ListGroup>\n               </Col>\n               <Col md={3}>\n                   <Card>\n                       <ListGroup variant='flush'>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                      <h4>Place:</h4>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       {helper.place}\n                                   </Col>      \n                               </Row>\n                           </ListGroup.Item>  \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                      <h4>For Services:</h4>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       {helper.contact}\n                                   </Col>      \n                               </Row>\n                           </ListGroup.Item>  \n                       </ListGroup>\n                   </Card>\n               </Col>\n           </Row> \n           <Row>\n               <Col md={6}>\n                   <h2>Reviews</h2>\n                   {helper.reviews.length===0 && <Message>No Reviews</Message>} \n                   <ListGroup variant='flush'>\n                      {helper.reviews.map(review => (\n                          <ListGroup.Item key={review._id}>\n                             <strong>{review.name}</strong>\n                             <Rating value={review.rating} />\n                             <p>{review.createdAt.substring(0,10)}</p>\n                             <p>{review.comment}</p>\n                          </ListGroup.Item>\n                      ))}\n                      <ListGroup.Item>\n                          <h2>Write a Customer Review</h2>\n                          {errorHelperReview && <Message variant='danger'>{errorHelperReview}</Message>}\n                          {userInfo? (\n                              <Form onSubmit={submitHandler}>\n                                  <Form.Group controlId='rating'>\n                                      <Form.Label>Rating</Form.Label>\n                                      <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                          <option value=''>Select...</option>\n                                          <option value='1'>1 - Poor</option>\n                                          <option value='2'>2 - Fair</option>\n                                          <option value='3'>3 - Good</option>\n                                          <option value='4'>4 - Very Good</option>\n                                          <option value='5'>5 - Excellent</option>\n                                      </Form.Control>\n                                  </Form.Group>\n                                  <Form.Group controlId='comment'>\n                                    <Form.Label>Comment</Form.Label>\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}>\n                                    </Form.Control>\n                                  </Form.Group>\n                                  <br />\n                                  <Button type='submit' variant='primary'>\n                                      Submit\n                                  </Button>\n                              </Form>\n                          )\n                          : <Message>Please <Link to='/login'>Sign In</Link> to post a Review</Message>}\n                      </ListGroup.Item>\n                   </ListGroup>\n               </Col>\n          </Row>\n           </>\n           )}\n        </>\n    )\n}\n\nexport default HelperScreens\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap'\nimport Rating from './Rating'\nconst Food = ({food}) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/food/${food._id}`}>\n            <Card.Img className=\"img-Change\"src={food.image} variant=\"top\" />\n        </Link>\n        <Card.Body>\n          <Link to={`/food/${food._id}`}>\n            <Card.Title as='div'>\n                <strong>{food.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as=\"div\">\n            <Rating value={food.rating} text={`${food.numReviews} reviews`} />\n        </Card.Text>\n        <Card.Text as=\"div\">\n           By: {food.owner}\n        </Card.Text>\n        <Card.Text as=\"div\">\n        At: {food.location}\n        </Card.Text>\n        </Card.Body>\n\n        </Card>\n    )\n}\n\nexport default Food;\n","import { FOOD_CREATE_FAIL, FOOD_CREATE_REQUEST, FOOD_CREATE_REVIEW_FAIL, FOOD_CREATE_REVIEW_REQUEST, FOOD_CREATE_REVIEW_SUCCESS, FOOD_CREATE_SUCCESS, FOOD_DELETE_FAIL, FOOD_DELETE_REQUEST, FOOD_DELETE_SUCCESS, FOOD_DETAILS_FAIL, FOOD_DETAILS_REQUEST, FOOD_DETAILS_SUCCESS, FOOD_LIST_FAIL, FOOD_LIST_REQUEST, FOOD_LIST_SUCCESS, FOOD_UPDATE_FAIL, FOOD_UPDATE_REQUEST, FOOD_UPDATE_SUCCESS } from '../constants/foodConstants'\nimport axios from 'axios'\n\nexport const listFoods= () => async(dispatch) =>{\n    try{\n        dispatch({type:FOOD_LIST_REQUEST})\n        const {data}= await axios.get(`/api/foods`)\n        dispatch({type:FOOD_LIST_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:FOOD_LIST_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const listFoodDetails= (id) => async(dispatch) =>{\n    try{\n        dispatch({type:FOOD_DETAILS_REQUEST})\n        const {data}= await axios.get(`/api/foods/${id}`)\n        dispatch({type:FOOD_DETAILS_SUCCESS,\n        payload:data,\n        })\n} catch(error){\n    dispatch({type:FOOD_DETAILS_FAIL,\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\n    })\n}\n}\n\nexport const deleteFood = (id) => async(dispatch,getState) =>{\n    try{\n        dispatch({\n            type: FOOD_DELETE_REQUEST,\n        })\n\n        const { userLogin: {userInfo},} = getState()\n\n        const config = {\n            headers:{\n                Authorization : `Bearer ${userInfo.token}`, \n            },\n        }\n\n         await axios.delete(`/api/foods/${id}`,config)\n \n        dispatch({\n            type:FOOD_DELETE_SUCCESS,\n            \n        })  \n\n    } catch(error){\n        dispatch({type:FOOD_DELETE_FAIL,\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n           })\n    }\n    }   \n    \n    export const createFood = () => async(dispatch,getState) =>{\n        try{\n            dispatch({\n                type: FOOD_CREATE_REQUEST,\n            })\n    \n            const { userLogin: {userInfo},} = getState()\n    \n            const config = {\n                headers:{\n                    Authorization : `Bearer ${userInfo.token}`, \n                },\n            }\n    \n            const {data}= await axios.post(`/api/foods`,{},config)\n     \n            dispatch({\n                type:FOOD_CREATE_SUCCESS,\n                payload:data \n                \n            })  \n    \n        } catch(error){\n            dispatch({type:FOOD_CREATE_FAIL,\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n               })\n        }\n        }    \n\n        export const updateFood = (food) => async(dispatch,getState) =>{\n            try{\n                dispatch({\n                    type: FOOD_UPDATE_REQUEST,\n                })\n        \n                const { userLogin: {userInfo},} = getState()\n        \n                const config = {\n                    headers:{\n                        'Content-Type':'application/json',\n                        Authorization : `Bearer ${userInfo.token}`, \n                    },\n                }\n        \n                const {data}= await axios.put(`/api/foods/${food._id}`,food,config)\n         \n                dispatch({\n                    type:FOOD_UPDATE_SUCCESS,\n                    payload:data \n                    \n                })  \n        \n            } catch(error){\n                dispatch({type:FOOD_UPDATE_FAIL,\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                   })\n            }\n            }   \n            \n            export const createFoodReview = (foodId,review) => async(dispatch,getState) =>{\n                try{\n                    dispatch({\n                        type: FOOD_CREATE_REVIEW_REQUEST,\n                    })\n            \n                    const { userLogin: {userInfo},} = getState()\n            \n                    const config = {\n                        headers:{\n                            'Content-Type':'application/json',\n                            Authorization : `Bearer ${userInfo.token}`, \n                        },\n                    }\n            \n                 await axios.post(`/api/foods/${foodId}/reviews`,review,config)\n             \n                    dispatch({\n                        type:FOOD_CREATE_REVIEW_SUCCESS,\n                        \n                    })  \n            \n                } catch(error){\n                    dispatch({type:FOOD_CREATE_REVIEW_FAIL,\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                       })\n                }\n                }  ","import React, { useEffect } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Row, Col} from 'react-bootstrap'\nimport Food from '../components/Food'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {listFoods} from '../actions/foodActions'\n\nconst FoodsScreens = () => {\n    const dispatch= useDispatch()\n    const foodList=useSelector(state=>state.foodList)\n    const {loading,error,foods}= foodList\n\n    useEffect(()=>{\n        dispatch(listFoods())\n    }, [dispatch])\n    return (\n        <>\n            <h1>Promoting Associated Local Foods</h1>\n            <h4>Opting local Food means healthier and more tasty food options.</h4>\n            {loading? (<Loader />): error?(<Message variant='danger'>{error}</Message>):(\n               <>\n               <Meta title='Foods' />\n                <Row>\n                 {foods.map(food =>(\n                     <Col key={food._id} sm={12} md={6} lg={4} xl={3}>\n                         <Food food={food} />\n                     </Col>\n                 ))}\n            </Row>\n            </>\n            )}      \n        </>\n    )\n}\n\nexport default FoodsScreens","import React,{useState, useEffect }from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col ,Image, ListGroup, Card,Form,Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Rating from '../components/Rating'\nimport Meta from '../components/Meta'\nimport {listFoodDetails,createFoodReview} from '../actions/foodActions'\nimport {FOOD_CREATE_REVIEW_RESET} from '../constants/foodConstants'\nconst FoodScreens = ({history,match}) => {\n\n    const [rating,setRating]= useState(0)\n    const [comment,setComment]= useState('')\n\n    const dispatch= useDispatch()\n   const foodDetails=useSelector(state=> state.foodDetails)\n   const {loading,error,food}=foodDetails \n\n   const userLogin= useSelector(state=> state.userLogin)\n   const {userInfo}=userLogin\n\n   const foodReviewCreate= useSelector(state=> state.foodReviewCreate)\n    const {success:successFoodReview,error:errorFoodReview}=foodReviewCreate\n\n    useEffect(()=>{\n        if(successFoodReview){\n            alert('Review Submitted')\n            setRating(0)\n            setComment('')\n            dispatch({type:FOOD_CREATE_REVIEW_RESET})\n        }\n        dispatch(listFoodDetails(match.params.id))\n    }, [dispatch,match,successFoodReview])\n\n    const submitHandler= (e) =>{\n        e.preventDefault()\n        dispatch(createFoodReview(match.params.id,{\n            rating,\n            comment\n        }))\n    }\n    return (\n        <>\n           <Link className=\"btn btn-dark my-3\" to=\"/foods\">\n               Go Back\n           </Link>\n           {loading?(<Loader />): error? (<Message varaint='danger'>{error}</Message>):(\n           <>\n           <Meta title={food.name} />\n           <Row>\n               <Col md={6}>\n                 <Image className=\"img-screens\"src={food.image} alt={food.name} fluid/>\n               </Col>\n               <Col md={3}>\n                  <ListGroup variant='flush'>\n                   <ListGroup.Item>\n                       <h2>{food.name}</h2>\n                   </ListGroup.Item>\n                   <ListGroup.Item>\n                     <Rating value={food.rating} text={`${food.numReviews} reviews `} />\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                  <h3> By:     {food.owner}</h3>\n                 </ListGroup.Item>\n                 <ListGroup.Item>\n                   Description:  {food.description}\n                 </ListGroup.Item>\n                  </ListGroup>\n               </Col>\n               <Col md={3}>\n                   <Card>\n                       <ListGroup variant='flush'>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                      <h4>Location:</h4>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                       {food.location}\n                                   </Col>      \n                               </Row>\n                           </ListGroup.Item>  \n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>\n                                      <h4>For Contracts and Orders:</h4>\n                                   </Col>\n                               </Row>\n                           </ListGroup.Item> \n                           <ListGroup.Item>\n                               <Row>\n                                <Col>\n                                       {food.contact}\n                                </Col>      \n                               </Row>\n                           </ListGroup.Item>  \n                       </ListGroup>\n                   </Card>\n               </Col>\n           </Row>\n           <Row>\n               <Col md={6}>\n                   <h2>Reviews</h2>\n                   {food.reviews.length===0 && <Message>No Reviews</Message>} \n                   <ListGroup variant='flush'>\n                      {food.reviews.map(review => (\n                          <ListGroup.Item key={review._id}>\n                             <strong>{review.name}</strong>\n                             <Rating value={review.rating} />\n                             <p>{review.createdAt.substring(0,10)}</p>\n                             <p>{review.comment}</p>\n                          </ListGroup.Item>\n                      ))}\n                      <ListGroup.Item>\n                          <h2>Write a Customer Review</h2>\n                          {errorFoodReview && <Message variant='danger'>{errorFoodReview}</Message>}\n                          {userInfo? (\n                              <Form onSubmit={submitHandler}>\n                                  <Form.Group controlId='rating'>\n                                      <Form.Label>Rating</Form.Label>\n                                      <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                          <option value=''>Select...</option>\n                                          <option value='1'>1 - Poor</option>\n                                          <option value='2'>2 - Fair</option>\n                                          <option value='3'>3 - Good</option>\n                                          <option value='4'>4 - Very Good</option>\n                                          <option value='5'>5 - Excellent</option>\n                                      </Form.Control>\n                                  </Form.Group>\n                                  <Form.Group controlId='comment'>\n                                    <Form.Label>Comment</Form.Label>\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}>\n                                    </Form.Control>\n                                  </Form.Group>\n                                  <br />\n                                  <Button type='submit' variant='primary'>\n                                      Submit\n                                  </Button>\n                              </Form>\n                          )\n                          : <Message>Please <Link to='/login'>Sign In</Link> to post a Review</Message>}\n                      </ListGroup.Item>\n                   </ListGroup>\n               </Col>\n          </Row>\n           </>\n           )}\n        </>\n    )\n}\n\nexport default FoodScreens\n","import axios from 'axios'\nimport {CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\n\nexport const addToCart= (id,qty) => async(dispatch,getState) =>{\n    const {data}= await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type:CART_ADD_ITEM,\n        payload:{\n            product: data._id,\n            name: data.name,\n            price: data.price,\n            image: data.image,\n            countInStock:data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart=(id)=> (dispatch,getState) =>{\n    dispatch({\n        type:CART_REMOVE_ITEM,\n        payload:id\n    })\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress=(data)=> (dispatch) =>{\n    dispatch({\n        type:CART_SAVE_SHIPPING_ADDRESS,\n        payload:data\n    })\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\n}\n\nexport const savePaymentMethod=(data)=> (dispatch) =>{\n    dispatch({\n        type:CART_SAVE_PAYMENT_METHOD,\n        payload:data\n    })\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\n}","import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch,useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport {Row,Col,ListGroup,Button,Image,Form,Card} from 'react-bootstrap'\nimport {addToCart, removeFromCart} from '../actions/cartActions'\n\nconst CartScreen = ({match,location,history}) => {\n    const productId= match.params.id \n    const qty= location.search? Number(location.search.split('=')[1]):1\n    const dispatch=useDispatch()\n\n    const cart= useSelector((state)=>state.cart)\n    const {cartItems}= cart\n\n    useEffect(()=>{\n        if(productId){\n            dispatch(addToCart(productId,qty))\n        }\n    },[dispatch,productId,qty])\n   \n   const removeFromCartHandler= (id) =>{\n       dispatch(removeFromCart(id))\n   } \n\n   const checkoutHandler= ()=>{\n       history.push('/login?redirect=shipping')\n   }\n\n    return (\n        <>\n        <Meta title='Cart' />\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length===0?(<Message>Your Cart is Empty. <Link to='/products'>Go Back</Link></Message>):(\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item =>(\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ₹{item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                    <Form.Control as='select' value={item.qty} onChange={(e)=> \n                                            dispatch(addToCart(item.product,Number(e.target.value)))}\n                                            >\n                                            {\n                                             [...Array(item.countInStock).keys()].map((x) =>(\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            ))}\n                                           </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n               <Card>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2>SubTotal ({cartItems.reduce((acc,item)=>acc+item.qty,0)}) items</h2>\n                           ₹{cartItems.reduce((acc,item)=>acc+(item.qty * item.price),0).toFixed(2)}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button type='button' className='btn-block' disabled={cartItems.length===0} onClick={checkoutHandler}>\n                               Proceed to Checkout\n                           </Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Card>\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport {Container,Row,Col} from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n           <Row className='justify-content-md-center'>\n               <Col xs={12} md={6}>\n                {children}\n               </Col>\n\n           </Row>\n            \n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Meta from '../components/Meta'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {login} from '../actions/userActions'\n\n\nconst LoginScreens = ({location,history}) => {  \n\n     const [email,setEmail]= useState('')\n     const [password,setPassword]= useState('')\n\n     const dispatch = useDispatch()\n\n     const userLogin = useSelector(state=> state.userLogin)\n\n     const {loading,error,userInfo} = userLogin\n\n     const redirect= location.search? location.search.split('=')[1]:'/'\n\n     useEffect(()=>{\n         if(userInfo){\n             history.push(redirect)\n         }\n     },[history,userInfo,redirect])\n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         dispatch(login(email,password))\n     }\n\n    return(\n        <>\n        <Meta title='Sign In' />\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Button  type='submit' variant='primary'>\n                  Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '} <Link to={redirect? `/register?redirect=${redirect}`:'/register'}>Register</Link>\n                </Col>\n            </Row>\n            \n        </FormContainer>\n        </>\n    )   \n} \n\nexport default LoginScreens\n","import React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\n\nconst RegisterScreens = ({location,history}) => {  \n\n     const [name,setName]= useState('')\n     const [email,setEmail]= useState('')\n     const [password,setPassword]= useState('')\n     const [confirmPassword,setConfirmPassword]= useState('')\n     const [message,setMessage]= useState(null)\n\n\n     const dispatch = useDispatch()\n\n     const userRegister = useSelector(state=> state.userRegister)\n\n     const {loading,error,userInfo} = userRegister\n\n     const redirect= location.search? location.search.split('=')[1]:'/'\n\n     useEffect(()=>{\n         if(userInfo){\n             history.push(redirect)\n         }\n     },[history,userInfo,redirect])\n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         if(password!==confirmPassword){\n             setMessage('Passwords do not match')\n         } else{\n             dispatch(register(name,email,password))\n         }  \n     }\n\n    return(\n        <>\n        <Meta title='Register' />\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e)=> setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br /> \n                <Button  type='submit' variant='primary'>\n                  Register \n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account?{' '} <Link to={redirect? `/login?redirect=${redirect}`:'/login'}>Login</Link>\n                </Col>\n            </Row>\n            \n        </FormContainer>\n        </>\n    )   \n} \n\nexport default RegisterScreens\n","import React ,{useState,useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\nimport {listMyOrders} from '../actions/orderActions'\n\n\nconst ProfileScreens = ({location,history}) => {  \n\n     const [name,setName]= useState('')\n     const [email,setEmail]= useState('')\n     const [password,setPassword]= useState('')\n     const [confirmPassword,setConfirmPassword]= useState('')\n     const [message,setMessage]= useState('')\n\n\n     const dispatch = useDispatch()\n\n     const userDetails = useSelector(state=> state.userDetails)\n     const {loading,error,user} = userDetails\n\n     const userLogin = useSelector(state=> state.userLogin)\n     const {userInfo} = userLogin\n\n     const userUpdateProfile = useSelector(state=> state.userUpdateProfile)\n     const {success} = userUpdateProfile\n\n     const orderListMy = useSelector(state=> state.orderListMy)\n     const {loading:loadingOrders,error:errorOrders,orders} = orderListMy\n\n\n     useEffect(()=>{\n         if(!userInfo){\n             history.push('/login')\n         } else{\n             if(!user.name || success){\n                 dispatch({type: USER_UPDATE_PROFILE_RESET})\n                 dispatch(getUserDetails('profile'))\n                 dispatch(listMyOrders())\n             } else{\n                 setName(user.name)\n                 setEmail(user.email)\n             }\n         }\n     },[dispatch,history,userInfo,user,success])\n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         if(password!==confirmPassword){\n             setMessage('Passwords do not match')\n         } else{\n             dispatch(updateUserProfile({id:user._id,name,email,password}))\n         }  \n     }\n\n    return(\n       <Row>\n           <Col md={3} className='align-items-center'>\n           <h2>User Profile</h2>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e)=> setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br /> \n                <Button  type='submit' variant='primary'>\n                  Update \n                </Button>\n            </Form>\n           </Col>\n           <Col md={9}>\n               <h2>My Orders</h2>\n               {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>\n               {errorOrders}</Message>: (\n                   <Table striped bordered hover responsive className='table-sm'>\n                       <thead>\n                           <tr>\n                               <th>ID</th>\n                               <th>DATE</th>\n                               <th>TOTAL</th>\n                               <th>PAID</th>\n                               <th>DELIVERED</th>\n                               <th></th>    \n                           </tr>\n                       </thead>\n                       <tbody>\n                           {orders.map(order =>(\n                               <tr key={order._id}>\n                                  <td>{order._id}</td>\n                                  <td>{order.createdAt.substring(0,10)}</td>\n                                  <td>{order.totalPrice}</td>\n                                  <td>{order.isPaid? order.paidAt.substring(0,10): (\n                                      <i className= 'fas fa-times' style={{color:'red'}}></i>\n                                  )}</td>\n                                  <td>{order.isDelivered? order.deliveredAt.substring(0,10): (\n                                      <i className= 'fas fa-times' style={{color:'red'}}></i>\n                                  )}</td>\n                                   <td>\n                                       <LinkContainer to={`/order/${order._id}`}>\n                                           <Button variant='light'>Details</Button>\n                                       </LinkContainer>\n                                   </td>\n                                  \n                               </tr>\n                           ))}\n                       </tbody>\n                   </Table>\n               )}\n           </Col>\n       </Row>\n    )   \n} \n\nexport default ProfileScreens\n","import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from '../constants/orderConstants'\nimport axios from 'axios'\n\n\nexport const createOrder = (order) => async(dispatch,getState) =>{\n    try{\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const { userLogin: {userInfo},} = getState()\n\n        const config = {\n            headers:{\n                'Content-Type':'application/json',\n                Authorization : `Bearer ${userInfo.token}`, \n            },\n        }\n\n        const {data}= await axios.post(`/api/orders`,order,config)\n \n        dispatch({\n            type:ORDER_CREATE_SUCCESS,\n            payload: data\n        })  \n\n    } catch(error){\n        dispatch({type:ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n           })\n    }\n    } \n\n    export const getOrderDetails = (id) => async(dispatch,getState) =>{\n        try{\n            dispatch({\n                type: ORDER_DETAILS_REQUEST,\n            })\n    \n            const { userLogin: {userInfo},} = getState()\n    \n            const config = {\n                headers:{\n                    Authorization : `Bearer ${userInfo.token}`, \n                },\n            }\n    \n            const {data}= await axios.get(`/api/orders/${id}`,config)\n     \n            dispatch({\n                type:ORDER_DETAILS_SUCCESS,\n                payload: data\n            })  \n    \n        } catch(error){\n            dispatch({type:ORDER_DETAILS_FAIL,\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n               })\n        }\n        }    \n\n\n        export const payOrder = (orderId,paymentResult) => async(dispatch,getState) =>{\n            try{\n                dispatch({\n                    type: ORDER_PAY_REQUEST,\n                })\n        \n                const { userLogin: {userInfo},} = getState()\n        \n                const config = {\n                    headers:{\n                        'Content-Type':'application/json',\n                        Authorization : `Bearer ${userInfo.token}`, \n                    },\n                }\n        \n                const {data}= await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n         \n                dispatch({\n                    type:ORDER_PAY_SUCCESS,\n                    payload: data\n                })  \n        \n            } catch(error){\n                dispatch({type:ORDER_PAY_FAIL,\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                   })\n            }\n            }    \n\n            export const listMyOrders = () => async(dispatch,getState) =>{\n                try{\n                    dispatch({\n                        type: ORDER_LIST_MY_REQUEST,\n                    })\n            \n                    const { userLogin: {userInfo},} = getState()\n            \n                    const config = {\n                        headers:{\n                            Authorization : `Bearer ${userInfo.token}`, \n                        },\n                    }\n            \n                    const {data}= await axios.get(`/api/orders/myorders`,config)\n             \n                    dispatch({\n                        type:ORDER_LIST_MY_SUCCESS,\n                        payload: data\n                    })  \n            \n                } catch(error){\n                    dispatch({type:ORDER_LIST_MY_FAIL,\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                       })\n                }\n                }    \n\n                export const listOrders = () => async(dispatch,getState) =>{\n                    try{\n                        dispatch({\n                            type: ORDER_LIST_REQUEST,\n                        })\n                \n                        const { userLogin: {userInfo},} = getState()\n                \n                        const config = {\n                            headers:{\n                                Authorization : `Bearer ${userInfo.token}`, \n                            },\n                        }\n                \n                        const {data}= await axios.get(`/api/orders`,config)\n                 \n                        dispatch({\n                            type:ORDER_LIST_SUCCESS,\n                            payload: data\n                        })  \n                \n                    } catch(error){\n                        dispatch({type:ORDER_LIST_FAIL,\n                            payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                           })\n                    }\n                    }      \n                    \n                    export const deliverOrder = (order) => async(dispatch,getState) =>{\n                        try{\n                            dispatch({\n                                type: ORDER_DELIVER_REQUEST,\n                            })\n                    \n                            const { userLogin: {userInfo},} = getState()\n                    \n                            const config = {\n                                headers:{\n                                    Authorization : `Bearer ${userInfo.token}`, \n                                },\n                            }\n                    \n                            const {data}= await axios.put(`/api/orders/${order._id}/deliver`,{},config)\n                     \n                            dispatch({\n                                type:ORDER_DELIVER_SUCCESS,\n                                payload: data\n                            })  \n                    \n                        } catch(error){\n                            dispatch({type:ORDER_DELIVER_FAIL,\n                                payload: error.response && error.response.data.message?error.response.data.message:error.message,\n                               })\n                        }\n                        }            ","import React from 'react'\nimport {Nav} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n           <Nav.Item>\n               {step1? (<LinkContainer to='/login'>\n                   <Nav.Link>Sign In</Nav.Link>\n               </LinkContainer>): (<Nav.Link disabled>Sign In</Nav.Link>)}\n           </Nav.Item>\n           <Nav.Item>\n               {step2? (<LinkContainer to='/shipping'>\n                   <Nav.Link>Shipping</Nav.Link>\n               </LinkContainer>): (<Nav.Link disabled>Shipping</Nav.Link>)}\n           </Nav.Item>\n           <Nav.Item>\n               {step3? (<LinkContainer to='/payment'>\n                   <Nav.Link>Payment</Nav.Link>\n               </LinkContainer>): (<Nav.Link disabled>Payment</Nav.Link>)}\n           </Nav.Item>\n           <Nav.Item>\n               {step4? (<LinkContainer to='/placorder'>\n                   <Nav.Link>Place Order</Nav.Link>\n               </LinkContainer>): (<Nav.Link disabled>Place Order</Nav.Link>)}\n           </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React ,{useState} from 'react'\nimport {Form,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport Meta from '../components/Meta'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {saveShippingAddress} from '../actions/cartActions'\n \nconst ShippingScreens = ({history}) => {\n\n      const cart= useSelector(state => state.cart)\n      const {shippingAddress}= cart \n\n      const [address,setAddress]= useState(shippingAddress.address)\n      const [city,setCity]= useState(shippingAddress.city)\n      const [pincode,setPinCode]= useState(shippingAddress.pincode)\n      const [country,setCountry]= useState(shippingAddress.country)\n\n      const dispatch= useDispatch()\n\n      const submitHandler= (e) =>{\n          e.preventDefault()\n          dispatch(saveShippingAddress({address,city,pincode,country}))\n          history.push('/payment') \n      }\n\n    return (\n        <>\n        <Meta title='Shipping' />\n        <FormContainer>\n         <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Address' value={address} required onChange={(e)=> setAddress(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n            <br />    \n            <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='Enter City' value={city} required onChange={(e)=> setCity(e.target.value)}>\n                    </Form.Control>\n            </Form.Group>  \n            <br /> \n            <Form.Group controlId='pincode'>\n                    <Form.Label>Pin Code</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Pin Code' value={pincode} required onChange={(e)=> setPinCode(e.target.value)}>\n                    </Form.Control>\n                </Form.Group> \n            <br />    \n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Country' value={country} required onChange={(e)=> setCountry(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>   \n            <br />    \n                <Button type='submit' variant='primary'>Continue</Button> \n            </Form>\n        </FormContainer>\n        </>\n    )\n}\n\nexport default ShippingScreens\n","import React ,{useState} from 'react'\nimport {Form,Button, Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Meta from '../components/Meta'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {savePaymentMethod} from '../actions/cartActions'\n \nconst PaymentScreens = ({history}) => {\n\n      const cart= useSelector(state => state.cart)\n      const {shippingAddress}= cart \n\n      if(!shippingAddress){\n          history.push('/shipping')\n      }\n\n      const [paymentMethod,setPaymentMethod]= useState('PayPal')\n    \n      const dispatch= useDispatch()\n\n      const submitHandler= (e) =>{\n          e.preventDefault()\n          dispatch(savePaymentMethod(paymentMethod))\n          history.push('/placeorder') \n      }\n\n    return (\n        <>\n        <Meta title='Select Payment' />\n        <FormContainer>\n         <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <br /> <br />\n                <Col>\n                    <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' \n                    checked onChange={(e)=>setPaymentMethod(e.target.value)}></Form.Check>\n                   <br />\n                  {/*  <Form.Check type='radio' label='GooglePay' id='GooglePay' name='paymentMethod' value='GooglePay'  onChange={(e)=>setPaymentMethod(e.target.value)}></Form.Check> */}\n                </Col>\n                </Form.Group>\n                <br />\n                <Button type='submit' variant='primary'>Continue</Button> \n            </Form>\n        </FormContainer>\n        </>\n    )\n}\n\nexport default PaymentScreens\n","import React ,{useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button,Row,Col,Image,ListGroup,Card} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {createOrder} from '../actions/orderActions'\nconst PlaceOrderScreens = ({history}) => {\n\n      const dispatch = useDispatch()\n \n    const cart=useSelector(state=> state.cart)\n\n    const addDecimals=(num) =>{\n        return (Math.round(num*100)/100).toFixed(2)\n    }\n\n    //Calculating Prices\n\n    cart.itemsPrice= addDecimals(cart.cartItems.reduce((acc,item)=> acc+(item.price *item.qty),0))\n\n    cart.shippingPrice= addDecimals(cart.itemsPrice>1000 ||cart.cartItems.length===0? 0: 100)\n\n    cart.taxPrice= addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n    cart.totalPrice=addDecimals(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice))\n\n\n    const orderCreate= useSelector(state=> state.orderCreate)\n    const {order,success,error}= orderCreate \n\n     useEffect(() =>{\n         if(success){\n             history.push(`/order/${order._id}`)\n         } \n         // eslint-disable-next-line\n     },[history,success])\n   \n\n    const placeOrderHandler= () =>{\n       dispatch(createOrder({\n           orderItems: cart.cartItems,\n           shippingAddress: cart.shippingAddress,\n           paymentMethod: cart.paymentMethod,\n           itemsPrice: cart.itemsPrice,\n           shippingPrice: cart.shippingPrice,\n           taxPrice: cart.taxPrice,\n           totalPrice: cart.totalPrice,\n        }))\n    }\n\n\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address},{cart.shippingAddress.city},{' '}{cart.shippingAddress.pincode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item> \n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length===0? <Message>Your Cart is Empty.</Message>:(\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item,index)=> (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                 <Col md={4}>\n                     <Card>\n                         <ListGroup variant='flush'>\n\n                           <ListGroup.Item>\n                               <h2>Order Summary</h2>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Items</Col>\n                                   <Col>₹ {cart.itemsPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Shipping</Col>\n                                   <Col>₹ {cart.shippingPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Tax</Col>\n                                   <Col>₹ {cart.taxPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Total</Col>\n                                   <Col>₹ {cart.totalPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n\n                          <ListGroup.Item>\n                              {error && <Message variant='danger'>{error}</Message>}\n                          </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={placeOrderHandler}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                         </ListGroup>\n                     </Card>\n                 </Col>\n\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreens\n","import React ,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,Image,ListGroup,Card,Button} from 'react-bootstrap'\nimport Meta from '../components/Meta'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {getOrderDetails, payOrder,deliverOrder} from '../actions/orderActions'\nimport {ORDER_PAY_RESET,ORDER_DELIVER_RESET} from '../constants/orderConstants'\nconst OrdersScreens = ({match,history}) => {\n      const orderId = match.params.id \n\n      const [sdkReady, setSdkReady]= useState(false)\n\n      const dispatch = useDispatch()\n \n   \n    const orderDetails= useSelector(state=> state.orderDetails)\n    const {order,loading,error}= orderDetails \n\n    const orderPay= useSelector(state=> state.orderPay)\n    const {loading:loadingPay,success:successPay}= orderPay\n    \n    const orderDeliver= useSelector(state=> state.orderDeliver)\n    const {loading:loadingDeliver,success:successDeliver}= orderDeliver \n\n    const userLogin= useSelector(state=> state.userLogin)\n    const {userInfo}= userLogin\n\n      if(!loading){\n        const addDecimals=(num) =>{\n            return (Math.round(num*100)/100).toFixed(2)\n        }\n    \n        //Calculating Prices\n    \n        order.itemsPrice= addDecimals(order.orderItems.reduce((acc,item)=> acc+(item.price *item.qty),0))\n        order.totalPrice= addDecimals(order.totalPrice)\n        order.shippingPrice=addDecimals(order.shippingPrice)\n        order.taxPrice= addDecimals(order.taxPrice)\n      }\n\n\n     useEffect(() =>{\n\n        if(!userInfo){\n            history.push('/login')\n        }\n\n        const addPayPalScript= async() =>{\n\n            const { data: clientId}= await axios.get('/api/config/paypal')\n            const script= document.createElement('script')\n            script.type= 'text/javascript'\n            script.src= `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload= () =>{\n                setSdkReady(true)\n            }\n             document.body.appendChild(script)\n        }\n\n        \n\n        if(!order ||order._id!== orderId || successPay || successDeliver){\n           dispatch({type: ORDER_PAY_RESET})\n           dispatch({type: ORDER_DELIVER_RESET})\n           dispatch(getOrderDetails(orderId))\n        } else if(!order.isPaid){\n            if(!window.paypal){\n                addPayPalScript()\n            } else{\n                setSdkReady(true)\n            }\n        }\n     },[dispatch,order,orderId,successPay,successDeliver,history,userInfo])\n   \n     const successPaymentHandler= (paymentResult) =>{\n           console.log(paymentResult)\n           dispatch(payOrder(orderId,paymentResult))\n     }\n    \n     const deliverHandler = () =>{\n         dispatch(deliverOrder(order))\n     }\n\n\n    return loading? <Loader />: error? <Message varaint='danger'>{error}\n    </Message>: <> \n          <Meta title='Order' />\n         <h1>Order {order._id}</h1>\n         <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name:</strong> {order.user.name}\n                            </p>\n                            <p>\n                            <strong>Email:</strong>\n                            <a href={`mailto:${order.user.email}`}> {order.user.email}</a></p>                \n\n                            <p>\n                                <strong>Address:</strong>\n                                {order.shippingAddress.address},{order.shippingAddress.city},{' '}{order.shippingAddress.pincode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (<Message varaint='success'>Delivered on {order.deliveredAt}</Message>):(\n                                <Message variant='danger'>Not Delivered</Message>\n                            )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                            <strong>Method: </strong>\n                            {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (<Message varaint='success'>Paid on {order.paidAt}</Message>):(\n                                <Message variant='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item> \n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length===0? <Message>Order is Empty.</Message>:(\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item,index)=> (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                 <Col md={4}>\n                     <Card>\n                         <ListGroup variant='flush'>\n\n                           <ListGroup.Item>\n                               <h2>Order Summary</h2>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Items</Col>\n                                   <Col>₹ {order.itemsPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Shipping</Col>\n                                   <Col>₹ {order.shippingPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Tax</Col>\n                                   <Col>₹ {order.taxPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           <ListGroup.Item>\n                               <Row>\n                                   <Col>Total</Col>\n                                   <Col>₹ {order.totalPrice}</Col>\n                               </Row>\n                           </ListGroup.Item>\n                           {!order.isPaid && (\n                               <ListGroup.Item>\n                                   {loadingPay && <Loader />}\n                                   {!sdkReady ? <Loader /> : (\n                                       <PayPalButton amount={order.totalPrice } onSuccess={successPaymentHandler} />\n                                   )}\n                               </ListGroup.Item>\n                           )}\n\n                           {loadingDeliver && <Loader />}\n\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                <ListGroup.Item>\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\n                                        Mark as Delivered\n                                    </Button>\n                                </ListGroup.Item>\n                            )}\n\n                         </ListGroup>\n                     </Card>\n                 </Col>\n\n            </Row>\n\n    </> \n}\n\nexport default OrdersScreens\n","import React ,{useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Table,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {listUsers,deleteUser} from '../actions/userActions'\n\nconst UserListScreens = ({history}) => {\n\n    const dispatch= useDispatch()\n\n    const userList= useSelector(state => state.userList)\n    const {loading,error,users}= userList\n\n    const userLogin= useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    const userDelete= useSelector(state => state.userDelete)\n    const { success: successDelete}= userDelete\n\n    useEffect(()=>{\n        if(userInfo && userInfo.isAdmin) {\n        dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    },[dispatch,history,successDelete,userInfo])\n\n    const deleteHandler= (id)=>{\n\n        if(window.confirm('Are you sure')){\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user =>(\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>\n                                {user.isAdmin? (<i className='fas fa-check' style={{color:'green'}}></i>): (\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\n                                )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n\n                                    <Button variant='light' className='btn-sm'>\n                                        <i className='fas fa-edit'></i>\n                                    </Button>\n\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        )\n\n                        )}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default UserListScreens\n","import React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails,updateUser } from '../actions/userActions'\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\n\n\nconst UserEditScreens = ({match,history}) => {  \n     const userId=match.params.id\n     const [name,setName]= useState('')\n     const [email,setEmail]= useState('')\n     const [isAdmin,setIsAdmin]= useState(false)\n\n\n     const dispatch = useDispatch()\n\n     const userDetails = useSelector(state=> state.userDetails)\n     const {loading,error,user} = userDetails\n\n     const userUpdate = useSelector(state=> state.userUpdate)\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\n\n     useEffect(()=>{\n         if(successUpdate) {\n             dispatch({type:USER_UPDATE_RESET})\n             history.push('/admin/userlist')\n         } else{\n            if( ! user.name || user._id!==userId){\n                dispatch(getUserDetails(userId))\n            } else {  \n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n         }\n        \n     },[user,dispatch,history,userId,successUpdate])\n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         dispatch(updateUser({_id:userId,name,email,isAdmin}))\n     }\n\n    return(\n            <> \n               <Link to='/admin/userlist' className='btn btn-dark my-3'>\n                   Go Back\n               </Link>\n               <FormContainer>\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='isadmin'>\n                    <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e)=> setIsAdmin(e.target.checked)}>\n                    </Form.Check>\n                </Form.Group>\n                 <br />\n               \n                <Button  type='submit' variant='primary'>\n                  Update\n                </Button>\n            </Form>\n           )}\n           \n            \n        </FormContainer>\n            </>\n\n        \n    )   \n} \n\nexport default UserEditScreens\n","import React ,{useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Table,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {listProducts, deleteProduct,createProduct} from '../actions/productActions'\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\n\nconst ProductListScreens = ({history}) => {\n\n   \n\n    const dispatch= useDispatch()\n\n    const productList= useSelector(state => state.productList)\n    const {loading,error,products}= productList\n\n    const userLogin= useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    const productDelete= useSelector(state => state.productDelete)\n    const {loading:loadingDelete,error:errorDelete,success:successDelete}= productDelete\n\n    const productCreate= useSelector(state => state.productCreate)\n    const {loading:loadingCreate,error:errorCreate,success:successCreate,product:createdProduct}= productCreate\n\n    useEffect(()=>{\n        dispatch({type:PRODUCT_CREATE_RESET})\n\n        if(!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if(successCreate){\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(''))\n        }\n\n    },[dispatch,history,userInfo,successDelete,successCreate,createdProduct])\n\n    const deleteHandler= (id)=>{\n\n        if(window.confirm('Are you sure')){\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler= () =>{\n          dispatch(createProduct())\n    }\n\n    return (\n        <>\n             <Row className='align-items-center'>\n                 <Col>\n                     <h1>Products</h1>\n                 </Col>\n                 <Col className='text-right'>\n                     <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                     </Button>\n                 </Col>\n             </Row>\n\n             {loadingDelete && <Loader />}\n             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n             {loadingCreate && <Loader />}\n             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n                \n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>PRICE</th>\n                            <th>CATEGORY</th>\n                            <th>BRAND</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map(product =>(\n                            <tr key={product._id}>\n                                <td>{product._id}</td>\n                                <td>{product.name}</td>\n                                <td>₹ {product.price}</td>\n                                <td>\n                                  {product.category}\n                                </td>\n                                <td>{product.brand}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n\n                                    <Button variant='light' className='btn-sm'>\n                                        <i className='fas fa-edit'></i>\n                                    </Button>\n\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(product._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        )\n\n                        )}\n                    </tbody>\n                </Table>\n                \n            )}\n        </>\n    )\n}\n\nexport default ProductListScreens\n","import axios from 'axios'\nimport React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nconst ProductEditScreens = ({match,history}) => {  \n     const productId=match.params.id\n     const [name,setName]= useState('')\n     const [price,setPrice]= useState(0)\n     const [description,setDescription]= useState('')\n     const [brand,setBrand]=useState('')\n     const [category,setCategory]=useState('')\n     const [image,setImage]= useState('')\n     const [countInStock,setCountInStock]=useState(0)\n     const [sellerName,setSellerName]=useState('')\n     const [sellerImage,setSellerImage]= useState('')\n     const [sellerDescription,setSellerDescription]=useState('')\n     const [sellerAddress,setSellerAddress]= useState('')\n     const [sellerContact,setSellerContact]= useState('')\n     const [uploading,setUploading]= useState(false)\n\n\n     const dispatch = useDispatch()\n\n     const productDetails = useSelector(state=> state.productDetails)\n     const {loading,error,product} = productDetails\n     \n     const productUpdate = useSelector(state=> state.productUpdate)\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = productUpdate\n\n     useEffect(()=>{\n\n            if(successUpdate){\n                dispatch({type:PRODUCT_UPDATE_RESET})\n                history.push('/admin/productlist')\n            } else {\n            if( ! product.name || product._id!==productId){\n                dispatch(listProductDetails(productId))\n            } else {  \n                setName(product.name)\n                setPrice(product.price)\n                setDescription(product.description)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setImage(product.image)\n                setSellerAddress(product.sellerAddress)\n                setSellerContact(product.sellerContact)\n                setSellerDescription(product.sellerDescription)\n                setSellerImage(product.sellerImage)\n                setSellerName(product.sellerName)\n\n            }\n        }   \n        \n     },[product,dispatch,history,productId,successUpdate])\n\n     const uploadFileHandler = async (e) => {\n         const file=e.target.files[0]\n         const formData= new FormData()\n         formData.append('image',file)\n         setUploading(true)\n\n         try{\n            const config ={\n                headers:{\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const {data} = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n         } catch(error){\n             console.error(error)\n             setUploading(false)\n         }\n     }\n     const uploadfileHandler = async(e) => {\n        const file=e.target.files[0]\n        const formData= new FormData()\n        formData.append('image',file)\n        setUploading(true)\n\n        try{\n           const config ={\n               headers:{\n                   'Content-Type': 'multipart/form-data'\n               }\n           }\n\n           const {data} = await axios.post('/api/upload', formData, config)\n\n           setSellerImage(data)\n           setUploading(false)\n\n\n        } catch(error){\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         dispatch(updateProduct({\n             _id:productId,\n             name,\n             price,\n             image,\n             brand,\n             category,\n             countInStock,\n             description,\n             sellerName,\n             sellerImage,\n             sellerDescription,\n             sellerAddress,\n             sellerContact,\n         }))\n     }\n\n    return(\n            <> \n               <Link to='/admin/productlist' className='btn btn-dark my-3'>\n                   Go Back\n               </Link>\n               <FormContainer>\n            <h1>Edit Product</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='price'>\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control type='number' placeholder='Enter Price' value={price} onChange={(e)=> setPrice(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Product image url' value={image} onChange={(e)=> setImage(e.target.value)}></Form.Control>\n                    <br />\n                    <Form.File className='image-file' custom onChange={uploadFileHandler}></Form.File>\n                   {uploading && <Loader />}\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='brand'>\n                <Form.Label>Brand</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Brand' value={brand} onChange={(e)=> setBrand(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='category'>\n                <Form.Label>Category</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Category' value={category} onChange={(e)=> setCategory(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br /> \n                 <Form.Group controlId='countInStock'>\n                <Form.Label>Count In Stock</Form.Label>\n                    <Form.Control type='number' placeholder='Enter Count In Stock' value={countInStock} onChange={(e)=> setCountInStock(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Description' value={description} onChange={(e)=> setDescription(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='sellerName'>\n                <Form.Label>Seller Name</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Seller Name' value={sellerName} onChange={(e)=> setSellerName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='sellerImage'>\n                <Form.Label>Seller Image</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Seller Image url' value={sellerImage} onChange={(e)=> setSellerImage(e.target.value)}>\n                    </Form.Control>\n                    <br />\n                    <Form.File className='image-file'  custom onChange={uploadfileHandler}></Form.File>\n                           {uploading && <Loader />}\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='sellerDescription'>\n                <Form.Label>Seller Description</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Seller Description' value={sellerDescription} onChange={(e)=> setSellerDescription(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='sellerAddress'>\n                <Form.Label>Seller Address</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Seller Address' value={sellerAddress} onChange={(e)=> setSellerAddress(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                 <Form.Group controlId='sellerContact'>\n                <Form.Label>Seller Contact</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Seller Contact Number' value={sellerContact} onChange={(e)=> setSellerContact(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                <Button  type='submit' variant='primary'>\n                  Update\n                </Button>\n            </Form>\n           )}\n           \n            \n        </FormContainer>\n            </>\n\n        \n    )   \n} \n\nexport default ProductEditScreens\n","import React ,{useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Table,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {listHelpers, deleteHelper,createHelper} from '../actions/helperActions'\nimport {HELPER_CREATE_RESET} from '../constants/helperConstants'\n\nconst HelperListScreens = ({history}) => {\n\n\n\n    const dispatch= useDispatch()\n\n    const helperList= useSelector(state => state.helperList)\n    const {loading,error,helpers}= helperList\n\n    const userLogin= useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    const helperDelete= useSelector(state => state.helperDelete)\n    const {loading:loadingDelete,error:errorDelete,success:successDelete}= helperDelete\n\n    const helperCreate= useSelector(state => state.helperCreate)\n    const {loading:loadingCreate,error:errorCreate,success:successCreate,helper:createdHelper}= helperCreate\n\n    useEffect(()=>{\n        dispatch({type:HELPER_CREATE_RESET})\n\n        if(!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if(successCreate){\n            history.push(`/admin/helper/${createdHelper._id}/edit`)\n        } else {\n            dispatch(listHelpers())\n        }\n\n    },[dispatch,history,userInfo,successDelete,successCreate,createdHelper])\n\n    const deleteHandler= (id)=>{\n\n        if(window.confirm('Are you sure')){\n            dispatch(deleteHelper(id))\n        }\n    }\n\n    const createHelperHandler= () =>{\n          dispatch(createHelper())\n    }\n\n    return (\n        <>\n             <Row className='align-items-center'>\n                 <Col>\n                     <h1>Services</h1>\n                 </Col>\n                 <Col className='text-right'>\n                     <Button className='my-3' onClick={createHelperHandler}>\n                        <i className='fas fa-plus'></i> Create Service\n                     </Button>\n                 </Col>\n             </Row>\n\n             {loadingDelete && <Loader />}\n             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n             {loadingCreate && <Loader />}\n             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>SERVICE</th>\n                            <th>LOCATION</th>\n                            <th>CONTACT</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {helpers.map(helper =>(\n                            <tr key={helper._id}>\n                                <td>{helper._id}</td>\n                                <td>{helper.name}</td>\n                                <td>{helper.occupation_type}</td>\n                                <td>\n                                  {helper.place}\n                                </td>\n                                <td>{helper.contact}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/helper/${helper._id}/edit`}>\n\n                                    <Button variant='light' className='btn-sm'>\n                                        <i className='fas fa-edit'></i>\n                                    </Button>\n\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(helper._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        )\n\n                        )}\n                    </tbody>\n                </Table>\n               \n               \n            )}\n        </>\n    )\n}\n\nexport default HelperListScreens\n","import axios from 'axios'\nimport React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {listHelperDetails, updateHelper } from '../actions/helperActions'\nimport { HELPER_UPDATE_RESET } from '../constants/helperConstants'\n\n\nconst HelperEditScreens = ({match,history}) => {  \n     const helperId=match.params.id\n     const [name,setName]= useState('')\n     const [occupation_type,setOccupation_Type]= useState()\n     const [description,setDescription]= useState('')\n     const [place,setPlace]=useState('')\n     const [contact,setContact]=useState('')\n     const [image,setImage]= useState('')\n     const [uploading,setUploading]= useState(false)\n\n\n     const dispatch = useDispatch()\n\n     const helperDetails = useSelector(state=> state.helperDetails)\n     const {loading,error,helper} = helperDetails\n     \n     const helperUpdate = useSelector(state=> state.helperUpdate)\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = helperUpdate\n\n     useEffect(()=>{\n\n            if(successUpdate){\n                dispatch({type:HELPER_UPDATE_RESET})\n                history.push('/admin/helperlist')\n            } else {\n            if( ! helper.name || helper._id!==helperId){\n                dispatch(listHelperDetails(helperId))\n            } else {  \n                setName(helper.name)\n                setOccupation_Type(helper.occupation_type)\n                setDescription(helper.description)\n                setPlace(helper.place)\n                setContact(helper.contact)\n                setImage(helper.image)\n               \n            }\n        }   \n        \n     },[helper,dispatch,history,helperId,successUpdate])\n\n     const uploadFileHandler = async (e) => {\n         const file=e.target.files[0]\n         const formData= new FormData()\n         formData.append('image',file)\n         setUploading(true)\n\n         try{\n            const config ={\n                headers:{\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const {data} = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n         } catch(error){\n             console.error(error)\n             setUploading(false)\n         }\n     }\n    \n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         dispatch(updateHelper({\n             _id:helperId,\n             name,\n             place,\n             image,\n             occupation_type,\n             contact,\n             description,\n             \n         }))\n     }\n\n    return(\n            <> \n               <Link to='/admin/helperlist' className='btn btn-dark my-3'>\n                   Go Back\n               </Link>\n               <FormContainer>\n            <h1>Edit Service</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='place'>\n                    <Form.Label>Place</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Place' value={place} onChange={(e)=> setPlace(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Helper Image url' value={image} onChange={(e)=> setImage(e.target.value)}></Form.Control>\n                    <br />\n                    <Form.File className='image-file' custom onChange={uploadFileHandler}></Form.File>\n                   {uploading && <Loader />}\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='occupation_type'>\n                <Form.Label>Profession</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Profession' value={occupation_type} onChange={(e)=> setOccupation_Type(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='contact'>\n                <Form.Label>Contact</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Contact Details' value={contact} onChange={(e)=> setContact(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br /> \n                 <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Description' value={description} onChange={(e)=> setDescription(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                <Button  type='submit' variant='primary'>\n                  Update\n                </Button>\n            </Form>\n           )}\n           \n            \n        </FormContainer>\n            </>\n\n        \n    )   \n} \n\nexport default HelperEditScreens\n","import React ,{useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Table,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nimport {listFoods, deleteFood,createFood} from '../actions/foodActions'\nimport {FOOD_CREATE_RESET} from '../constants/foodConstants'\n\nconst FoodListScreens = ({history}) => {\n\n\n    const dispatch= useDispatch()\n\n    const foodList= useSelector(state => state.foodList)\n    const {loading,error,foods}= foodList\n\n    const userLogin= useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    const foodDelete= useSelector(state => state.foodDelete)\n    const {loading:loadingDelete,error:errorDelete,success:successDelete}= foodDelete\n\n    const foodCreate= useSelector(state => state.foodCreate)\n    const {loading:loadingCreate,error:errorCreate,success:successCreate,food:createdFood}= foodCreate\n\n    useEffect(()=>{\n        dispatch({type:FOOD_CREATE_RESET})\n\n        if(!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if(successCreate){\n            history.push(`/admin/food/${createdFood._id}/edit`)\n        } else {\n            dispatch(listFoods())\n        }\n\n    },[dispatch,history,userInfo,successDelete,successCreate,createdFood])\n\n    const deleteHandler= (id)=>{\n\n        if(window.confirm('Are you sure')){\n            dispatch(deleteFood(id))\n        }\n    }\n\n    const createFoodHandler= () =>{\n          dispatch(createFood())\n    }\n\n    return (\n        <>\n             <Row className='align-items-center'>\n                 <Col>\n                     <h1>Foods</h1>\n                 </Col>\n                 <Col className='text-right'>\n                     <Button className='my-3' onClick={createFoodHandler}>\n                        <i className='fas fa-plus'></i> Create Food\n                     </Button>\n                 </Col>\n             </Row>\n\n             {loadingDelete && <Loader />}\n             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n             {loadingCreate && <Loader />}\n             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>OWNED BY</th>\n                            <th>LOCATION</th>\n                            <th>CONTACT</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {foods.map(food =>(\n                            <tr key={food._id}>\n                                <td>{food._id}</td>\n                                <td>{food.name}</td>\n                                <td>{food.owner}</td>\n                                <td>\n                                  {food.location}\n                                </td>\n                                <td>{food.contact}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/food/${food._id}/edit`}>\n\n                                    <Button variant='light' className='btn-sm'>\n                                        <i className='fas fa-edit'></i>\n                                    </Button>\n\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(food._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        )\n\n                        )}\n                    </tbody>\n                </Table>\n               \n                \n            )}\n        </>\n    )\n}\n\nexport default FoodListScreens\n","import axios from 'axios'\nimport React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {listFoodDetails, updateFood } from '../actions/foodActions'\nimport {FOOD_UPDATE_RESET } from '../constants/foodConstants'\n\n\nconst FoodEditScreens = ({match,history}) => {  \n     const foodId=match.params.id\n     const [name,setName]= useState('')\n     const [owner,setOwner]= useState()\n     const [description,setDescription]= useState('')\n     const [location,setLocation]=useState('')\n     const [contact,setContact]=useState('')\n     const [image,setImage]= useState('')\n     const [uploading,setUploading]= useState(false)\n\n\n     const dispatch = useDispatch()\n\n     const foodDetails = useSelector(state=> state.foodDetails)\n     const {loading,error,food} = foodDetails\n     \n     const foodUpdate = useSelector(state=> state.foodUpdate)\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = foodUpdate\n\n     useEffect(()=>{\n\n            if(successUpdate){\n                dispatch({type:FOOD_UPDATE_RESET})\n                history.push('/admin/foodlist')\n            } else {\n            if( ! food.name || food._id!==foodId){\n                dispatch(listFoodDetails(foodId))\n            } else {  \n                setName(food.name)\n                setOwner(food.owner)\n                setDescription(food.description)\n                setLocation(food.location)\n                setContact(food.contact)\n                setImage(food.image)\n               \n            }\n        }   \n        \n     },[food,dispatch,history,foodId,successUpdate])\n\n     const uploadFileHandler = async (e) => {\n         const file=e.target.files[0]\n         const formData= new FormData()\n         formData.append('image',file)\n         setUploading(true)\n\n         try{\n            const config ={\n                headers:{\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const {data} = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n         } catch(error){\n             console.error(error)\n             setUploading(false)\n         }\n     }\n    \n\n     const submitHandler= (e)=>{\n         e.preventDefault()\n         dispatch(updateFood({\n             _id:foodId,\n             name,\n             location,\n             image,\n             owner,\n             contact,\n             description,\n             \n         }))\n     }\n\n    return(\n            <> \n               <Link to='/admin/foodlist' className='btn btn-dark my-3'>\n                   Go Back\n               </Link>\n               <FormContainer>\n            <h1>Edit Food</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Food Name' value={name} onChange={(e)=> setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                <Form.Group controlId='location'>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Location' value={location} onChange={(e)=> setLocation(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Food Image url' value={image} onChange={(e)=> setImage(e.target.value)}></Form.Control>\n                    <br />\n                    <Form.File className='image-file' custom onChange={uploadFileHandler}></Form.File>\n                   {uploading && <Loader />}\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='owner'>\n                <Form.Label>Owned By</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Owner/Community Name' value={owner} onChange={(e)=> setOwner(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                 <br />\n                 <Form.Group controlId='contact'>\n                <Form.Label>Contact</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Contact Details' value={contact} onChange={(e)=> setContact(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br /> \n                 <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Description' value={description} onChange={(e)=> setDescription(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                 <br />  \n                <Button  type='submit' variant='primary'>\n                  Update\n                </Button>\n            </Form>\n           )}\n           \n            \n        </FormContainer>\n            </>\n\n        \n    )   \n} \n\nexport default FoodEditScreens\n","import React ,{useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Table,Button} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {listOrders} from '../actions/orderActions'\n\nconst OrderListScreens = ({history}) => {\n\n    const dispatch= useDispatch()\n\n    const orderList= useSelector(state => state.orderList)\n    const {loading,error,orders}= orderList\n\n    const userLogin= useSelector(state => state.userLogin)\n    const {userInfo}= userLogin\n\n    useEffect(()=>{\n        if(userInfo && userInfo.isAdmin) {\n        dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    },[dispatch,history,userInfo])\n\n  \n    return (\n        <>\n            <h1>Orders</h1>\n            {loading? <Loader />: error? <Message variant='danger'>{error}</Message>: (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order =>(\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user&& order.user.name}</td>\n                                <td>{order.createdAt.substring(0,10)}</td>\n                                <td>₹ {order.totalPrice}</td>\n                                <td>\n                                {order.isPaid? (order.paidAt.substring(0,10)): (\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\n                                )}\n                                </td>\n                                <td>\n                                {order.isDelivered? (order.deliveredAt.substring(0,10)): (\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\n                                )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n\n                                    <Button variant='light' className='btn-sm'>\n                                        Details \n                                    </Button>\n\n                                    </LinkContainer>\n                                   \n                                </td>\n                            </tr>\n                        )\n\n                        )}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default OrderListScreens\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreens from './screens/HomeScreens';\nimport ProductsScreens from './screens/ProductsScreens';\nimport ProductScreens from './screens/ProductScreens';\nimport SellerScreens from './screens/SellerScreens';\nimport HelpersScreens from './screens/HelpersScreens';\nimport HelperScreens from './screens/HelperScreens';\nimport FoodsScreens from './screens/FoodsScreens';\nimport FoodScreens from './screens/FoodScreens';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreens from './screens/LoginScreens';\nimport RegisterScreens from './screens/RegisterScreens';\nimport ProfileScreens from './screens/ProfileScreens';\nimport ShippingScreens from './screens/ShippingScreens';\nimport PaymentScreens from './screens/PaymentScreens';\nimport PlaceOrderScreens from './screens/PlaceOrderScreens';\nimport OrderScreens from './screens/OrderScreens';\nimport UserListScreens from './screens/UserListScreens';\nimport UserEditScreens from './screens/UserEditScreens';\nimport ProductListScreens from './screens/ProductListScreens';\nimport ProductEditScreens from './screens/ProductEditScreens';\nimport HelperListScreens from './screens/HelperListScreens';\nimport HelperEditScreens from './screens/HelperEditScreens';\nimport FoodListScreens from './screens/FoodListScreens';\nimport FoodEditScreens from './screens/FoodEditScreens';\nimport OrderListScreens from './screens/OrderListScreens';\nconst App=() => {\n  return (\n    <Router>\n     <Header />\n     <main className='py-3'>\n       <Container>\n       <Route path='/' component={HomeScreens} exact />\n       <Route path='/search/:keyword' component={ProductsScreens} exact />\n       <Route path='/products' component={ProductsScreens} exact />   \n       <Route path='/product/:id' component={ProductScreens}  />\n       <Route path='/product/:id/seller' component={SellerScreens} exact />\n       <Route path='/admin/product/:id/edit' component={ProductEditScreens}  />\n       <Route path='/admin/helper/:id/edit' component={HelperEditScreens}  />\n       <Route path='/admin/food/:id/edit' component={FoodEditScreens}  />\n       <Route path='/helpers' component={HelpersScreens} exact />\n       <Route path='/helper/:id' component={HelperScreens}  />\n       <Route path='/foods' component={FoodsScreens} exact  />\n       <Route path='/food/:id' component={FoodScreens}  />\n       <Route path='/cart/:id?' component={CartScreen}  />\n       <Route path='/admin/userlist' component={UserListScreens}  />\n       <Route path='/admin/user/:id/edit' component={UserEditScreens}  />\n       <Route path='/admin/productlist' component={ProductListScreens} exact />\n       <Route path='/admin/helperlist' component={HelperListScreens} exact  />\n       <Route path='/admin/foodlist' component={FoodListScreens} exact />\n       <Route path='/admin/orderlist' component={OrderListScreens}  />\n       <Route path='/login' component={LoginScreens} />\n       <Route path='/register' component={RegisterScreens} />\n       <Route path='/profile' component={ProfileScreens} />\n       <Route path='/shipping' component={ShippingScreens} />\n       <Route path='/payment' component={PaymentScreens} />\n       <Route path='/placeorder' component={PlaceOrderScreens} />\n       <Route path='/order/:id' component={OrderScreens} />\n       </Container>\n     </main>\n     <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}